namespace rootalias;
import core::common -;

function size_t foo(cslice{int} sli, varray{int} mutable& vec)
{
  vec.push_back(3); // throws: try to modify vec, which is aliased to sli
  return sli.size();
}

{
  set_stack_trace_limit(0);
  mutable x = make_varray{int}(0, 1, 2, 3, 4, 5);
  try {
    const v = foo(x, x);
    println(v);
  } catch (c_exception ex) {
    println("caught", ex);
  }
}
