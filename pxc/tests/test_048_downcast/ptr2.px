public namespace ptr2;
import core::common -;

interface ifoo {
  public function int f(int x);
}

struct foo < ifoo > {
  public function int f(int x) { return x * 2; }
}

struct bar < ifoo > {
  public function int f(int x) { return x * 3; }
}

function void t1()
{
  const p = make_ptr(foo());
  ptr{ifoo} ip = p;
  ptr{bar} q = pointer_downcast{ptr{bar}, ptr{ifoo}}(ip); // runtime error
  int z = q->f(5);
  println(z);
}

try {
  t1();
} catch (c_exception ex) {
  println("caught", ex);
}

