namespace retest2;
import common -;
import regex::posix -;

function void t1()
{
  regerror_t err;
  mutable re = regex("([a-z]+)([0-9]+)", REG_EXTENDED, err);
  if (err != REG_OK) {
    println(re.error_string(err));
    return;
  }
  farray{regmatch_t, 3} m;
  err = re.exec("abc", m, 0);
  if (err == REG_OK) {
    for (size_t i, regmatch_t mutable e : m) {
      println(numeric_cast{int, regex::posix::regoff_t}(e.rm_so));
      println(numeric_cast{int, regex::posix::regoff_t}(e.rm_eo));
    }
  } else {
    println("failed");
    // println(re.error_code());
    // println(re.error_string());
  }
}

t1();

