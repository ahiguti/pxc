namespace itmpl0;
import io;

interface comparable {
  function int compare(foo x, foo y) const;
}

struct compare_object : comparable : {
  function int compare(foo x, foo y) const {
    if (x.v < y.v) {
      return -1;
    } else if (x.v > y.v) {
      return 1;
    }
    return 0;
  }
}

struct foo {
  int v;
}

function void test1()
{
  foo x = foo(10);
  foo y = foo(20);
  ref{compare_object} ro = ref(compare_object());
  ref{comparable} c = ro;
  int v = c->compare(x, y);
  io::println(v);
}

test1();

