public namespace unboundtest;
import common -;
import meta m;
import operator -;

multithreaded interface {t} uneval {
  function t eval();
}

metafunction func_args_tuple{f} tuple{m::arg_types{f}};
metafunction func_ret{f} m::ret_type{f};

multithreaded struct {f}
uneval_thread_params(
  tptr{func_args_tuple{f}} const& a,
    // bugfix 20140104: tuple is instantiated even when f is unbound
    // bugfix 20140104: thread-safety check even if uninstantiated
)
{
}

{
  println("ok");
}
