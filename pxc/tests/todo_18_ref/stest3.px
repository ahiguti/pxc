
namespace stest3;
import system "";
import io;

multithreaded struct my_arg {
  int x;
  int y;
  tref{int} z;
}

threaded function void my_func(system::system_t thrsys, my_arg arg)
{
  println(arg.x); // FIXME: can interleave?
  string s;
  for (size_t i = 0; i < 10; ++i) {
    s = "";
    for (size_t j = 0; j < 10; ++j) {
      int x = i + j;
      s.append(int_to_string(x));
    }
  }
  *arg.z = string_to_int(s);
}

vector{thread_t} thrs;
tref{int} z;
for (size_t i = 0; i < 100; ++i) {
  thrs.push(system_main.create_thread{my_func}(my_arg(123, 456, z)));
}
foreach (size_t i, thread_t thr : thrs) {
  thr.join();
}

