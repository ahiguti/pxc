
// vim:sw=2

namespace perl;
public import perl::impl;
public import perl::symbols;
public import meta::common m;
private import numeric::integral -;

public metafunction sv perl::impl::sv;
public metafunction av perl::impl::av;
public metafunction hv perl::impl::hv;
public metafunction xs_create_function{f} perl::impl::xs_create_function{f};
public metafunction xs_create_type{f} perl::impl::xs_create_type{f};
public metafunction sv_to_int perl::impl::sv_to_int;
public metafunction int_to_sv perl::impl::int_to_sv;
public metafunction sv_to_value{t} perl::impl::sv_to_value{t};
public metafunction value_to_sv{t} perl::impl::value_to_sv{t};

public function {ns} void export_all()
{
  metafunction allfuncs perl::symbols::all_functions{ns};
  metafunction alltypes perl::symbols::all_types{ns};
  expand (i : m::seq{m::size{allfuncs}}) {
    perl::xs_create_function{m::at{allfuncs, i}}();
  }
  expand (i : m::seq{m::size{alltypes}}) {
    perl::xs_create_type{m::at{alltypes, i}}();
  }
}

public function {ns} void show_exports()
{
  metafunction allfuncs perl::symbols::all_functions{ns};
  metafunction alltypes perl::symbols::all_types{ns};
  expand (i : m::seq{m::size{allfuncs}}) {
    println(m::full_string{m::at{allfuncs, i}});
  }
  expand (i : m::seq{m::size{alltypes}}) {
    println(m::full_string{m::at{alltypes, i}});
  }
}

