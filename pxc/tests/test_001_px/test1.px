
// vim: syntax=javascript:sw=8:ts=8

public namespace test1 "use-unsafe";
import common -;

struct st1 {
  public complex c;
}

struct complex {
  public int re;
  public int im;
}

function extern "test::fdecl" int fdecl(int x);
function int fdef(int x)
{
  return 0;
}

interface icomparable {
  public function int compare(int x, int y);
}

public function int test1()
{
  tree_map{int,varray{int}} ivm;
  complex c;
  c.re = 5;
  c.im = 3;
  st1 s;
  s.c.re = 10;
  test1::test1();
  return 3;
}

int xint = 999;
string ystr = "hoge";

if (1 == 1) {
  xint = 33;
}

function int foo(int x, int y)
{
  function int test2(int w) {
    return x + w * 2;
  }
  int z = test2(x) + y;
  z += 3;
  return x + z;
}

function int fact(int x)
{
  if (x <= 0) {
    return 1;
  }
  return fact(x - 1) * x;
}

function int fibonacchi(int x)
{
  if (x <= 0) {
    return 0;
  } else if (x <= 1) {
    return 1;
  } else {
    return fibonacchi(x - 1) + fibonacchi(x - 2);
  }
}

function int sum(int x, int y)
{
  int r = 0;
  int i;
  for (i = x; i < y; ++i) {
    r += i;
  }
  return r;
}

int v3 = 10;
println(fibonacchi(30));
println(fact(v3));

