import core::common -;

public namespace functional3;
import core::meta m;

function {f} m::ret_type{f} apply(m::arg_type{f,0} x)
{
  return f(x);
}

function {f,g} m::ret_type{f} composite(m::arg_type{g,0} x)
{
  return f(g(x));
}

function int foo(int x)
{
  return x * x;
}

function void test()
{
  int v = apply{foo}(5);
  println(v);
  int w = composite{foo,foo}(5);
  println(w);
}

test();
