
public namespace up1;
import common -;
import numeric::cast -;

function {t, f} void array_foreach(t mutable& v)
{
  size_t sz = v.size();
  size_t i;
  for (i = 0; i < sz; ++i) {
    f(v[i]);
  }
}

function void foo(varray{int} mutable& v) {
  int x;
  function void bar(int y) {
    x += y;
  }
  array_foreach{varray{int}, bar}(v);
  println(x);
}

varray{int} a;
a.resize(101, 0);
size_t i;
for (i = 0; i < a.size(); ++i) {
  a[i] = numeric_cast{int, size_t}(i);
}
foo(a);

