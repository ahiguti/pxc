import common -;

namespace list;

threaded union {t} list {
  unit null;
  ptr{cons{t}} value;
}

threaded struct {t} cons {
  t head;
  list{t} rest;
}

threaded function {t} size_t length(list{t} xs) {
  if (case xs.null) {
    return 0;
  } else {
    return length(xs.value->rest) + 1;
  }
}

threaded function {t} list{t} makecons(t head, list{t} rest)
{
  list{t} r;
  r.value = to_ptr{cons{t}}(cons{t}(head, rest));
  return r;
}

