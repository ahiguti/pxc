
public namespace erat1;
import core::common -;

function ptr{varray{size_t}} eratosthenes(size_t x)
{
  varray{size_t} uiv;
  ptr{varray{size_t}} ret = make_ptr(uiv);
  varray{size_t} sieve;
  sieve.resize(x, static_cast{size_t}(0u));
  sieve[1] = 1;
  size_t i;
  for (i = 2; i < x; ++i) {
    if (sieve[i] == 0) {
      ret->push_back(i);
      size_t j;
      for (j = i * i; j < x; j += i) {
        sieve[j] = 1;
      }
    }
  }
  return ret;
}

{
  ptr{varray{size_t}} arr = eratosthenes(100000);
  size_t i;
  for (i = 0; i < arr->size(); ++i) {
    println((*arr)[i]);
  }
}

