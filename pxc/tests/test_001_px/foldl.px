
public namespace foldl;
import core::common -;
import core::numeric::cast -;

function {vt, mt, op} vt foldl(vt v, mt m) {
  vt r = v;
  size_t i;
  for (i = 0; i < m.size(); ++i) {
    r = op(r, m[i]);
  }
  return r;
}

varray{int} a;
a.resize(100, 0);
size_t i;
for (i = 0; i < a.size(); ++i) {
  a[i] = numeric_cast{int, size_t}(i + 1);
}
function int add(int x, int y) {
  return x + y;
}
metafunction foldl_add foldl{int, varray{int}, add};
int z = foldl_add(0, a);
println(z);

