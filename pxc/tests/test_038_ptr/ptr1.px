public namespace ptr1;
import core::common -;
import core::meta m;

public pure mtvaluetype struct foo(int x_, string const& s_) {
  public int x = x_;
  public string s = s_;
}

function {con} void t1() {
  int const x = 30;
  string const s = "abc";
  const f = m::apply{m::symbol{"core::pointer", con},
    foo, m::list{m::list{foo, 0}}}(foo(x, s));
  print(m::full_string{m::typeof{f}});
  print(" ");
  print(f->x);
  print(" ");
  print(f->s);
  print(" ");
  println(f);
}

t1{"make_ptr"}();
t1{"make_cptr"}();
t1{"make_iptr"}();
t1{"make_tptr"}();
t1{"make_tcptr"}();
// t1{tiptr{foo}}();

