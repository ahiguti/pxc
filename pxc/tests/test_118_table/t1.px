public namespace t1;
public import common -;
public import meta m; 
public import meta::family mf;
public import exception -;
public import io::text -;
public import io::errno -;
public import table -;

{
  println("TEST0");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable tout = table_ofile{{string, int, float}, 0}(system.stdout());
  transform{0}(tin, tout);
}

{
  println("TEST1");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable ttbl = table_map{{string}, {int, float}}();
  mutable tout = table_ofile{{string, int, float}, 0}(system.stdout());
  transform{0}(tin, ttbl);
  transform{0}(ttbl, tout);
}

{
  println("TEST2");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable ttbl = table_map{{string}, {int, float}}();
  mutable tout = table_ofile{{float, string}, 0}(system.stdout());
  transform{0}(tin, ttbl);
  transform{{2, 0}}(ttbl, tout);
}

{
  println("TEST3");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable ttbl = table_map{{string}, {int, float}}();
  mutable tout = table_ofile{{float, string}, 0}(system.stdout());
  float sum = 0.0;
  transform{0}(tin, ttbl);
  transform{{{my_add, 1, 2}, 0}}(ttbl, tout);
  threaded function float my_add(int x, float y) {
    const v = static_cast{float}(x) + y;
    sum += v;
    return v;
  }
  println("sum", sum);
}

{
  println("TEST4");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable ttbl = table_map{{string}, {int, float}}();
  mutable tout = table_ofile{{float, string}, 0}(system.stdout());
  float sum = 0.0;
  transform{0}(tin, ttbl);
  transform{tr_func}(ttbl, tout);
  threaded function {cb} bool tr_func(string const& x, int y, float z) {
    const v = static_cast{float}(y) + z;
    sum += v;
    return cb(v, x);
  }
  println("sum", sum);
}

{
  println("TEST5");
  const fp = system.open("hoge3c.txt").value;
  metafunction opt {{"regex" ,"([a-z]+):([0-9]+)"}};
  mutable tin = table_ifile{{string, int}, opt}(fp);
  mutable tout = table_ofile{{string, int}, 0}(system.stdout());
  transform{0}(tin, tout);
}

{
  println("TEST6");
  const fp = system.open("hoge3.txt").value;
  mutable tin = table_ifile{{string, int, float}, 0}(fp);
  mutable t0 = table_map{{string}, {int, float}}();
  mutable t1 = table_map{{float, int, string}, m::nil}();
  mutable tout = table_ofile{{string, float, int}, 0}(system.stdout());
  transform{0}(tin, t0);
  transform{{2, 1, 0}}(t0, t1);
  transform{{2, 0, 1}}(t1, tout);
}


