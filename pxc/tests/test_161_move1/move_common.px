public namespace move_common "use-unsafe";
public import common -;

public function extern "move_common::move" {t} t mutable& move(t mutable& x);

extern "types" inline
namespace move_common {
template <typename T> static inline T&& move(T& x) {
  return static_cast<typename std::remove_reference<T>::type&&>(x);
}
};
;

