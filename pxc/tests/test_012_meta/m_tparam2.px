import common -;

public namespace m_tparam2;
import meta m;

public function {t, s} int foo() {
  return 3;
}

public struct {t} bar {
  public int x;
}

public struct baz {
}

metafunction name_np{s}
  m::concat{"(", m::full_string{s}, ":", m::tparam_size{s}, ")"};
metafunction funcs{ns} m::map{m::functions{ns}, name_np};
metafunction types{ns} m::map{m::types{ns}, name_np};
metafunction ns_funcs funcs{"m_tparam2"};
metafunction ns_types types{"m_tparam2"};
println(m::concat{"FUNC: ",  m::full_string{ns_funcs}});
println(m::concat{"TYPE: ",  m::full_string{ns_types}});

metafunction inst foo{baz, baz};
println(m::concat{"INST: ",  m::full_string{name_np{inst}}});
println(m::full_string{int});
println(m::full_string{tree_map{int,int}});

