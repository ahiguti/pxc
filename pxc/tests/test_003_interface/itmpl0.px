import core::common -;
public namespace itmpl0;

pure interface {t} comparable {
  public function int compare(t x, t y) const;
}

pure struct compare_object {
  public function int compare(foo x, foo y) const {
    if (x.v < y.v) {
      return -1;
    } else if (x.v > y.v) {
      return 1;
    }
    return 0;
  }
}

pure struct foo {
  public int v;
}

{
  foo x = foo(10);
  foo y = foo(20);
  ptr{compare_object} c = make_ptr{compare_object}(compare_object());
  int v = c->compare(x, y);
  println(v);
}

