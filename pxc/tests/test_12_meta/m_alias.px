
namespace m_tparam;
import meta "";
import io;

function {t, s} int foo() {
  return 3;
}

struct {t} bar {
  int x;
}

struct baz {
}

macro name_np{s} concat{"(", full_string{s}, ":", num_tparams{s}, ")"};
macro nfuncs{ns} metamap{functions{ns}, name_np};
macro ntypes{ns} metamap{types{ns}, name_np};
macro ns_funcs nfuncs{"m_tparam"};
macro ns_types ntypes{"m_tparam"};
macro inst foo{baz, baz};

io::println(concat{"FUNC: ",  full_string{ns_funcs}});
io::println(concat{"TYPE: ",  full_string{ns_types}});
io::println(concat{"INST: ",  full_string{name_np{inst}}});
io::println(full_string{int});
io::println(full_string{tree_map{int,int}});

