namespace m_alias;
import common -;
import meta -;

function {t, s} int foo() {
  return 3;
}

struct {t} bar {
  int x;
}

struct baz {
}

metafunction name_np{s} concat{"(", full_string{s}, ":", num_tparams{s}, ")"};
metafunction nfuncs{ns} map{functions{ns}, name_np};
metafunction ntypes{ns} map{types{ns}, name_np};
metafunction ns_funcs nfuncs{"m_alias"};
metafunction ns_types ntypes{"m_alias"};
metafunction inst foo{baz, baz};

println(concat{"FUNC: ",  full_string{ns_funcs}});
println(concat{"TYPE: ",  full_string{ns_types}});
println(concat{"INST: ",  full_string{name_np{inst}}});
println(full_string{int});
println(full_string{tree_map{int,int}});

