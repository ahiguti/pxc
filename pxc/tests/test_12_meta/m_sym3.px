namespace m_sym3;
import test_common "";

import meta;

function {t1, t2, f, c} t1 func0() { return f(); }
function {t1, t2, f, c} t1 func1(t2 a0) { return f(c(a0)); }
function {t1, t2, f, c} t1 func2(t2 a0, t2 a1) { return f(c(a0), c(a1)); }

macro func_n{f}
  meta::apply{
    meta::symbol{func0, meta::concat{"func", meta::argnum{f}}},
    int, string, f, type::builtin::string_to_bt_int
  };

function int foo(int x, int y)
{
	return x * y;
}

import io;

int r = func_n{foo}("100", "200");
io::println(r);

