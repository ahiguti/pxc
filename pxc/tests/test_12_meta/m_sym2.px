namespace hoge;
import common "";
import meta::builtin m;

foo x;
show_symbol(x);

function {t} void show_symbol(t x) {
  macro sname m::concat{t, "_to_string"};
  macro sym m::symbol{t, sname};
  if (m::eq{m::to_string{sym}, sname}) {
    println(sym(x));
  } else {
    println("func not found");
  }
}

function string foo_to_string(foo f) {
  return "foo_str";
}

threaded struct foo {
}

