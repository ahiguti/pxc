-:-: (while compiling 'test_157_funcptr/fp5.px')
test_157_funcptr/fp5.px:30: (while compiling this statement)
pointer/func.px:30: (instantiated from here) instantiating pointer::func::funcptr1___call{{{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}}}
pointer/func.px:33: (while compiling this statement)
pointer/func.px:30: argument 0 must have lvalue
pointer/func.px:30: (while evaluating expression: meta::error{"argument 0 must have lvalue"} where arg={meta::int,0} fparg=pointer::func::cxxref{meta::int} i=0)
pointer/func.px:30: (while evaluating expression: meta::cond{meta::and{pointer::func::is_cxxmutableref{fparg},meta::not{meta::at1{arg}}},meta::error{meta::concat{"argument ",i," must have lvalue"}},1} where arg={meta::int,0} fparg=pointer::func::cxxref{meta::int} i=0)
pointer/func.px:30: (while evaluating expression: meta::map{{0},{tilist::={{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}}}{fpargtypes::={pointer::func::cxxref{meta::int}}}{argtypes::={{meta::int,0}}}metafunction{i}pointer::func::call_check_arg{i,meta::at{fpargtypes,i},meta::at{argtypes,i}}} where argtypes={{meta::int,0}} fpargtypes={pointer::func::cxxref{meta::int}} tilist={{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}})
pointer/func.px:30: (while evaluating expression: meta::apply{{tilist::={{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}}}metafunction{fpargtypes,argtypes}meta::map{meta::seq{meta::sub{meta::size{tilist},1}},metafunction{i}pointer::func::call_check_arg{i,meta::at{fpargtypes,i},meta::at{argtypes,i}}},{pointer::func::cxxref{meta::int}},{{meta::int,0}}} where tilist={{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}})
pointer/func.px:30: (while evaluating expression: meta::cond{pointer::func::call_check_args{tilist},pointer::func::call_rettype{tilist},pointer::func::call_rettype{tilist}} where tilist={{pointer::func::funcptr1{meta::int,pointer::func::cxxref{meta::int}},0},{meta::int,0}})
