
namespace up2;
import test_common "";
import numeric::cast "";

function {t, f} void values_vector(vector{t}& v)
{
  size_t sz = v.size();
  size_t i;
  for (i = 0; i < sz; ++i) {
    f(v[i]);
  }
}

function {t, f} void keys_vector(vector{t}& v)
{
  uint sz = v.size();
  uint i;
  for (i = 0; i < sz; ++i) {
    f(i);
  }
}

function void foo(vector{int}& v) {
  int x;
  function void bar(int y) { x += y; }
  values_vector{int, bar}(v);
  println(x);
}

vector{int} a;
a.resize(101, int());
size_t i;
for (i = 0; i < a.size(); ++i) {
  a[i] = numeric_cast{int, size_t}(i);
}
foo(a);

