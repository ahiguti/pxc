

macro intarr ref{vector{int}};
# function arrsum(a:intarr):int
# {
#	var r:int = 0;
#	for var e:int (*a) {
#		r += e;
#	}
#	return r;
# }

macro intptr ref{int};

function int addptr(intptr ap, intptr bp)
{
	int a = *ap;
	int b = *bp;
	return a + b;
}

function intptr makeptr(int a)
{
	intptr ap = ref(a);
	return ap;
}

# function arrsum2(a:intarr):int
# {
#	var r:int = 0;
#	for (var i:ulong = 0; i != ulong(*a); ++i) {
#		r += (*a)[i];
#	}
#	return r;
# }

