public namespace e3;
import core::common -;
import core::meta m;

interface ifoo {
  public function string hoge(string x);
  public function string fuga(string x);
}

metafunction mf_str{t} m::map{m::member_functions{t}, m::to_string};

struct foo < ifoo > {
  expand(fsym : mf_str{ifoo}) {
    public function string fsym(string argx) {
      string s = ""; // m::to_string(fsym);
      s.append(":");
      s.append(argx);
      return s;
    }
  }
}
/*
*/

function void test1() {
  println(m::full_string{m::member_functions{ifoo}});
  ptr{ifoo} p = make_ptr{foo}(foo());
  println(p->hoge("A"));
  println(p->hoge("B"));
}

test1();
