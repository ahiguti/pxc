
namespace test1;
import perl;
import common -;
import numeric::integral -;
import pointer -;

function perl::sv f1(perl::sv x)
{
  return x;
}

function perl::sv f2(perl::sv x, perl::sv y)
{
  return perl::int_to_sv(perl::sv_to_int(x) + perl::sv_to_int(y));
}

function int f3(int x, int y)
{
  return x + y;
}

struct hoge {
  int x;
  long y;
  string z;
}

function int hoge_get_x(hoge const& o) { return o.x; }
function void hoge_set_x(hoge mutable& o, int x) { o.x = x; }
function string hoge_get_z(hoge const& o) { return o.z; }
function void hoge_set_z(hoge mutable& o, cstrref const& z) { o.z = z; }

function ptr{hoge} f4()
{
  ptr{hoge} v = make_ptr(hoge());
  return v;
}

function int f5(ptr{hoge} v)
{
  v->x += 1;
  return v->x;
}

