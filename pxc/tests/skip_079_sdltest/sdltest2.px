public namespace sdltest2 "use-unsafe";
import common -;
import pointer::raw -;
import SDL2::api_base -;
import SDL2::api_types -;
import SDL2::api_functions -;
import SDL2::api_wrappers -;
import SDL2::misc -;

/*
metafunction SDL_CreateWindow_Scoped
  scoped{SDL_CreateWindow, SDL_DestroyWindow};
metafunction SDL_LoadBMP_RW_Scoped
  scoped{SDL_LoadBMP_RW, SDL_FreeSurface};
metafunction SDL_CreateRenderer_Scoped
  scoped{SDL_CreateRenderer, SDL_DestroyRenderer};
metafunction SDL_CreateTextureFromSurface_Scoped
  scoped{SDL_CreateTextureFromSurface, SDL_DestroyTexture};
metafunction SDL_RWFromFile_Scoped
  scoped{SDL_RWFromFile, SDL_RWclose};
*/

{
  SDL_Init(SDL_INIT_VIDEO);
  scoped_nullable{SDL_DestroyWindow} wnd;
  wnd.reset(SDL_CreateWindow("sdltest", 0, 0, 640, 480, SDL_WINDOW_RESIZABLE));
  scoped_nullable{SDL_DestroyRenderer} rnd;
  rnd.reset(SDL_CreateRenderer(wnd, -1, 0));
  scoped_nullable{SDL_RWclose} rw;
  rw.reset(SDL_RWFromFile("test.bmp", "rb"));
  scoped_nullable{SDL_FreeSurface} sur;
  sur.reset(SDL_LoadBMP_RW(rw, 0));
  scoped_nullable{SDL_DestroyTexture} tx;
  tx.reset(SDL_CreateTextureFromSurface(rnd, sur));
  SDL_Rect src;
  src.x = 0;
  src.y = 0;
  src.w = 200;
  src.h = 170;
  mutable dst = src;
  SDL_RenderCopy(rnd, tx, caddress(src), caddress(dst));
  bool done = false;
  int x = 0;
  while (!done) {
    SDL_Event ev;
    while (SDL_PollEvent(address(ev)) != 0) {
      if (ev.type == SDL_QUIT) {
	done = true;
	break;
      }
    }
    SDL_RenderClear(rnd);
    x = (x + 1) & 127;
    dst.x = (x >= 64) ? 128 - x : x;
    SDL_RenderCopy(rnd, tx, caddress(src), caddress(dst));
    SDL_RenderPresent(rnd);
    SDL_Delay(5);
  }
}

