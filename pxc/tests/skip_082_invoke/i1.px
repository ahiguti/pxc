public namespace i1;
import core::common -;
import core::meta m;
import core::meta::vararg va;

struct foo {
  int f1;
  string f2;
  function {name, ts} string __invoke(expand(va::arg_decls_bycref{ts})) {
    string s;
    s = "__invoke o=( ";
    serialize_to_string{int}(f1, s);
    s.append(" ) args=(");
    expand(a, i: va::arg_names{m::size{ts}}) {
      {
        s.append(" ");
        metafunction t m::at0{m::at{ts, i}};
        serialize_to_string{t}(a, s);
      }
    }
    s.append(" )");
    println(s);
    return s;
  }
}

{
  foo x;
  x.f1 = 999;
  x.__invoke{"m1"}("hoge", 33);
  x.__invoke{"m2"}("fuga", 44);
}
