namespace ot1;
import common -;
import orb -;

public threaded function int foo(int x, int y)
{
  return x + y;
}

public threaded function string bar(cstrref const& x, cstrref const& y)
{
  string s = x;
  s.append(y);
  return s;
}

private threaded struct transport_dummy <orb_transport> {
  function void send_receive(string mutable& rbuf, string mutable& wbuf) { }
}

private function void t1()
{
  orb o = orb(make_ptr{transport_dummy}());
  o.funcs = create_ns_functions{"ot1"}();
  o.rbuf = "foo\t1\t2";
  call_ns_function(o, 0, o.rbuf.size());
  print(o.wbuf);
  o.wbuf.clear();
  o.rbuf = "bar\tabc\txyz";
  call_ns_function(o, 0, o.rbuf.size());
  print(o.wbuf);
}

private function void t2()
{
  orb o = orb(make_ptr{transport_dummy}());
  o.rbuf = "foo\t1\t2";
  call_ns_function_ni{"ot1"}(o, 0, o.rbuf.size());
  print(o.wbuf);
  o.wbuf.clear();
  o.rbuf = "bar\tabc\txyz";
  call_ns_function_ni{"ot1"}(o, 0, o.rbuf.size());
  print(o.wbuf);
}

t1();
t2();
