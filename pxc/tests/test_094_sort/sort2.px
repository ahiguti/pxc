public namespace sort2 "use-unsafe";
import core::common -;

function extern "pxsort::sort" {tcmp, tc} void
sort(tcmp const& cmp, tc mutable& x);

struct cmp {
  function bool call(int x, int y) const { return x > y; }
}

{
  mutable arr = make_farray{int}(5, 33, 1, 3, 99, 0, 2);
  sort(cmp(), arr);
  print(arr);
}

extern "functions" inline
#include <algorithm>
namespace pxsort {
template <typename Tcmp, typename Tv> struct call {
  call(Tcmp const& x) : o(x) { }
  bool operator ()(Tv const & x, Tv const& y) const { return o.call$f(x, y); }
private:
  Tcmp const& o;
};
template <typename Tcmp, typename Tc> inline void sort(Tcmp const& cmp, Tc& x)
{
  call<Tcmp, typename Tc::mapped_type> o(cmp);
  std::sort(x.rawarr(), x.rawarr() + x.size(), o);
}
};
;
