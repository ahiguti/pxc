public namespace r1 "use-unsafe";
public import core::common -;
private import core::pointer::raw_unsafe -;
public import core::meta m;
public import core::pointer::raw -;
/*
   0000000000000000 <r1$n::deref_getvalue$f(int*)>:
   0:   8b 07                   mov    (%rdi),%eax
   2:   c3                      retq
   3:   66 66 66 66 2e 0f 1f    data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
   a:   84 00 00 00 00 00
 */
public function int deref_getvalue(rawptr{int} x)
{
  return *x.to_slice(1);
}

{
  int v = 99;
  rawptr{int} foo = address(v);
  const v1 = deref_getvalue(foo);
  println(v, v1);
}
