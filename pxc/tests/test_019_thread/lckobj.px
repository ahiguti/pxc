namespace lckobj;
import common -;
import thread -;

multithreaded struct my_thread_obj(int x0, int y0,
  io::io const& sys0, tptr{int} const& sobj0) {
  int x = x0;
  int y = y0;
  io::io sys = sys0;
  tptr{int} sobj = sobj0;
  function void main() {
    io::file::file stdout = sys.stdout();
    io::standard::file_println(stdout, "my thread main");
    io::standard::file_println(stdout, x);
    io::standard::file_println(stdout, y);
    lock_guard{int} lck = lock_guard{int}(sobj);
    int v = *lck;
    io::standard::file_println(stdout, v);
  }
}

function void test1()
{
  const sobj = make_tptr(int(56));
  thread thr = make_thread(my_thread_obj(123, 456, io::system, sobj));
  thr.join();
}

test1();

