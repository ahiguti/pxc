public namespace t19;
public import common -;
public import regex::posix -;
public import python py;

/* no defcon, noncopyable */
struct foo(cstrref const& expr0) {
  private regerror_t err;
  private regex re = regex(expr0, REG_EXTENDED, err);
  public function string match(cstrref const& s) {
    farray{regmatch_t, 1} ma;
    const e = re.exec(s, ma, 0);
    if (e == REG_OK) {
      return s[
	static_cast{size_t}(ma[0].rm_so)
	..
	static_cast{size_t}(ma[0].rm_eo)];
    } else {
      return string();
    }
  }
}

{
  try {
    const class_foo = py::make_class{foo}();
    mutable obj = class_foo("abc|xyz");
    println(class_foo);
    println(obj.match("hoxyzgeabczzz"));
    // const main = py::module("__main__");
    // mutable global = main.__dict__;
  } catch (py::error_already_set e) {
    py::error_print();
  }
}

