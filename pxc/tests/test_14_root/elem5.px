
namespace elem5;
import common -;

struct foo {
  int value;
}

function foo f1(vector{foo} mutable& v, foo const& x)
  // x is passed by const ref
{
  println("a");
  v.resize(20, foo()); // would invalidate
  println("b");
  return x;
}

function void test1()
{
  vector{foo} v;
  v.resize(10, foo());
  v[3] = foo(10);
  foo z = f1(v, v[3]);
  v[3] = foo(5);
  println(v[3].value);
  println(z.value);
}

exception::common::set_stack_trace_limit(0);
test1();
