
namespace foldl;
import common "";
import meta::builtin "";

function {t, binop, zero, lst} t foldl(lst v) {
  t r = zero;
  foreach (local{lst, "key_type"} k, local{lst, "mapped_type"} m : v) {
    r = binop(r, m);
  }
  return r;
}

vector{int} a;
a.resize(100, int());
size_t i;
for (size_t i, int mutable v : a) {
  v = numeric_cast{int, size_t}(i + 1);
}
function int add(int x, int y) {
  return x + y;
}
int z = foldl{int, add, 0, vector{int}}(a);
println(z);

