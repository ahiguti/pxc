public namespace pytiming4;
public import core::common -;
public import python py;
public import test -;

function size_t test1(int num)
{
  size_t sum = 0;
  for (const i : 0 .. num) {
    const rf = system.read_file("hoge3.txt");
    const s = *rf.value;
    sum += s.size();
  }
  return sum;
}

function size_t test1py(int num)
{
  const builtin = py::module("__builtin__");
  long sum = 0;
  for (const i : 0 .. num) {
    const s = builtin.open("hoge3.txt", "r").read();
    sum += py::len(s);
  }
  return static_cast{size_t}(sum);
}

function size_t test1py2(int num)
{
  const main = py::module("__main__");
  const global = main.__dict__;
  py::exec(string_join{"\n"}(
    "def test1(num):",
    "  sum = 0",
    "  for i in range(num):",
    "    s = open('hoge3.txt', 'r').read()",
    "    sum += len(s)",
    "  return sum"),
    global, global);
  long sum = main.test1(num);
  return static_cast{size_t}(sum);
}

{
  try {
    test_timing_default{{
      test1,
      test1py,
      test1py2
    }}();
  } catch (py::error_already_set e) {
    py::error_print();
  }
}

