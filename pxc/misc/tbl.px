#!/usr/bin/pxc

public namespace tbl;
import core::common -;
import core::io::buffered -;
import core::text::string::split -;
import core::meta m;

pure function {cb, line_delim, col_delim} void
parse_table(file const& ifile)
{
  metafunction enttype m::arg_type{cb, 0};
  const err = stream_foreach{file, parse_line}(ifile, line_delim, 16386);
  pure function bool parse_line(cstrref const& line) {
    enttype e;
    string_split{col_delim}(line,
      expand(fld: m::field_names{enttype}; e.fld));
    return cb(e);
  }
}

pure mtvaluetype struct mapent {
  string address;
  string perms;
  unit offset;
  unit dev;
  uint inode;
  string path;
}

{
  varray{mapent} vec;
  parse_table{record_cb, '\n', col_delim}(get_stdin(system));
  pure function bool col_delim(uchar ch) {
    return ch == ' ' || ch == '\t';
  }
  pure function bool record_cb(mapent const& e) {
    vec.push_back(e);
    return true;
  }
  println(vec);
}

