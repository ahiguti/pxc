private threaded namespace pgl3d::resource_pool "export-unsafe";
public import common -;
public import pointer::raw -;
public import pointer::raw_unsafe -;
public import numeric::fpmath -;
public import glm;
public import glm::raw;
public import io::time -;
public import exception -;
public import meta m;
public import pointer::tfuncptr -;
public import GL::compat -;
public import pgl3d::glresource -;
public import pgl3d::glshader -;
public import pgl3d::glgeometry -;
public import pgl3d::glbuffer -;
public import pgl3d::scene_node -;
public import pgl3d::pglbase -;
public import pgl3d::intern_pool -;
public import pgl3d::shader_config -;
public import pgl3d::aggregated_ibuffer -;
public import pgl3d::texture -;

public metafunction resource_pool_ptr ptr{resource_pool_i};

public interface resource_pool_i resource_pool {
}

public threaded struct resource_pool <resource_pool_i>
{
  public tree_map{string, ptr{gl_texture}} textures;
}

