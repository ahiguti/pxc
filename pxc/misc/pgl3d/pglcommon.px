public namespace pglcommon;
public import common -;
public import meta m;

public threaded function float
to_radians(float deg)
{
  return deg * 3.14159265f / 180.0f;
}

public threaded function {cond, t} void
erase_cond(t mutable& arr)
{
  const sz = arr.size();
  size_t mutable i0 = 0;
  size_t mutable i1 = sz - 1;
  if (sz == 0) {
    return;
  }
  {
    const a = arr[0 .. sz];
    while (true) {
      while (i0 < i1 && cond(a[i1])) {
	--i1;
      }
      while (i0 <= i1 && !cond(a[i0])) {
	++i0;
      }
      if (i0 >= i1) {
	break;
      }
      swap(a[i0], a[i1]);
    }
  }
  if (i0 < sz) {
    arr.erase(i0, sz);
  }
}

