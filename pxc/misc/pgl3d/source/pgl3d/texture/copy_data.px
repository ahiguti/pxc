public threaded namespace pgl3d::texture::copy_data "use-unsafe";
public import common -;
public import meta m;
public import glm -;
public import sdl2::api_types -;
public import text::serialize::compact_pod -;
public import pgl3d::texture::texture -;
public import pgl3d::texture::voxel -;
public import pgl3d::engine::util -;
public import pgl3d::sdl::sdlutil -;

public struct copy_data_type {
  public metafunction num_tex 2;
  public farray{texture_data, num_tex} tex;
  public uvec3 copy_size; // can be smaller than tex_pri.
  public uvec3 cursor_offset;
}

public struct copy_data_type_v1 {
  public texture_data tex_pri;
  public texture_data tex_sec;
  public uvec3 copy_size; // can be smaller than tex_pri.
  public uvec3 cursor_offset;
}

public function copy_data_type
copy_data_type_compat_deserialize(string const& s)
{
  copy_data_type r = from_string{copy_data_type}(s);
  if (r.tex[0].get_size_l2_uvec3() == uvec3()) {
    copy_data_type_v1 rv1 = from_string{copy_data_type_v1}(s);
    r.tex[0].swap(rv1.tex_pri);
    r.tex[1].swap(rv1.tex_sec);
  }
  return r;
}
