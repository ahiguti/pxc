#!/usr/bin/pxc
namespace fm;
import common -;
import meta m;

threaded function {f, t} m::apply{m::base{t}, m::rettype{f}} map(t const& x)
{
  m::apply{m::base{t}, m::rettype{f}} r;
  r.resize(x.size(), m::rettype{f}());
  for (const k, const v : x) {
    r[k] = f(v);
  }
  return r;
}

{
  vector{int} vec;
  vec.resize(10, 0);
  for (size_t i : 0 .. vec.size()) { vec[i] = static_cast{int}(i); }
  int mul = 5;
  function string times(int x) {
    string s = to_string(x * mul);
    s.append("?");
    return s;
  }
  println(map{times}(vec));
  mul = 3;
  println(map{times}(vec));
}

