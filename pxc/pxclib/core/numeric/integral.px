public threaded namespace core::numeric::integral "use-unsafe";
public import core::meta::initial;

public pure tsvaluetype struct extern "@0void" "@0void" void { }
public pure tsvaluetype struct extern "@0unit" "@0unit" unit { }
public pure tsvaluetype struct extern "@0bool" "@0bool" bool { }
public pure tsvaluetype struct extern "@0uchar" "@0uchar" uchar { }
public pure tsvaluetype struct extern "@0char" "@0char" char { }
public pure tsvaluetype struct extern "@0schar" "@0schar" schar { }
public pure tsvaluetype struct extern "@0ushort" "@0ushort" ushort { }
public pure tsvaluetype struct extern "@0short" "@0short" short { }
public pure tsvaluetype struct extern "@0uint" "@0uint" uint { }
public pure tsvaluetype struct extern "@0int" "@0int" int { }
public pure tsvaluetype struct extern "@0ulong" "@0ulong" ulong { }
public pure tsvaluetype struct extern "@0long" "@0long" long { }
public pure tsvaluetype struct extern "@0size_t" "@0size_t" size_t { }
public pure tsvaluetype struct extern "@0ssize_t" "@0ssize_t" ssize_t { }

public pure tsvaluetype struct extern "::pxcrt::bt_ulonglong" "extuint"
  ulonglong { }
public pure tsvaluetype struct extern "::pxcrt::bt_longlong" "extint"
  longlong { }

public pure function {t, v} t numeric_constant() { return v; }

public metafunction zero{t} numeric_constant{t, 0};
public metafunction one{t} numeric_constant{t, 1};

public pure function {t} t constant_false() { return t(false); }
public pure function {t} t constant_true() { return t(true); }

