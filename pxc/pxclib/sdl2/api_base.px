public threaded namespace sdl2::api_base "use-unsafe";
public import core::common -;
public import core::meta m;

extern "cflags" "-D_THREAD_SAFE";
extern "ldflags" "-lSDL2";
extern "ldflags" "-lSDL2_ttf";
extern "ldflags" "-lSDL2_image";

public metafunction Uint8 uchar;
public metafunction Uint16 ushort;
public metafunction Uint32 uint;
public metafunction Uint64 ulonglong;
public metafunction Sint8 char;
public metafunction Sint16 short;
public metafunction Sint32 int;
public metafunction Sint64 longlong;
public metafunction uint8_t uchar;
public metafunction uint16_t ushort;
public metafunction uint32_t uint;
public metafunction uint64_t ulonglong;
public metafunction int8_t char;
public metafunction int16_t short;
public metafunction int32_t int;
public metafunction int64_t longlong;
public metafunction uintptr_t size_t;

public pure tsvaluetype struct extern "int" "extint" SDL_Enum { }
public pure function {tto, tfrom} tto SDL_Enum_to__(tfrom x)
{
  /* implicit conversion */
  return static_cast{tto}(x);
}

extern "types" inline
#include <SDL.h>
#include <SDL_shape.h>
#include <SDL_syswm.h>
#include <SDL_ttf.h>
#include <SDL_image.h>
;
