namespace container::string;
public import numeric::integral -;
public import container::array -;
public import container::impl::string;

public macro strref slice{uchar};
public macro cstrref cslice{uchar};

public mtvaluetype extern "pxcrt::bt_string" "varray"
struct string {
  public macro key_type size_t;
  public macro mapped_type uchar;
  public macro range_type slice{uchar};
  public macro crange_type cslice{uchar};
  public extern "empty" function bool empty() const;
  public extern "size" function size_t size() const;
  public extern "find" function size_t find(size_t o, uchar const& v) const;
  public extern "resize" function void resize(size_t i, uchar const& v);
  public extern "clear" function void clear();
  public extern "push_back" function void push_back(uchar const& v);
  public extern "pop_back" function uchar pop_back();
  public extern "get" function uchar get(size_t i) const;
  public extern "set" function void set(size_t i, uchar v);
  public extern "reserve" function void reserve(size_t i);
  public extern "append" function void append(crange_type const& v);
  public extern "insert" function void insert(size_t p, crange_type const& v);
  public extern "erase" function void erase(size_t first, size_t last);
}

public tsvaluetype extern "pxcrt::bt_strlit" "farray"
struct strlit {
  public macro key_type size_t;
  public macro mapped_type uchar;
  public macro range_type slice{uchar};
  public macro crange_type cslice{uchar};
  public extern "empty" function bool empty() const;
  public extern "size" function size_t size() const;
  public extern "find" function size_t find(size_t o, uchar const& v) const;
}

