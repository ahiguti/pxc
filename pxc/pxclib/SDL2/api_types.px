/* This file is generated by sdl_px_apigen.pl */
public threaded namespace SDL2::api_types "use-unsafe";
public import common -;
public import pointer::raw -;
public import container::raw -;
public import SDL2::api_base -;
public import meta m;
public multithreaded struct extern "%" khronos_usize_t { }
public multithreaded struct extern "%" "extenum" mz_streamp { }
public multithreaded struct extern "%" "extenum" GLsync { }
public multithreaded struct extern "%" SDL_SysWMinfo { }
public multithreaded struct extern "%" charf { }
public multithreaded struct extern "%" khronos_int8_t { }
public multithreaded struct extern "%" mz_int16 { }
public multithreaded struct extern "%" Byte { }
public multithreaded struct extern "%" GLbitfield { }
public multithreaded struct extern "%" "extenum" EGLConfig { }
public multithreaded struct extern "%" voidpc { }
public multithreaded struct extern "%" SDL_SpinLock { }
public multithreaded struct extern "%" NativeWindowType { }
public multithreaded struct extern "%" khronos_int16_t { }
public multithreaded struct extern "%" GLint { }
public multithreaded struct extern "%" khronos_utime_nanoseconds_t { }
public multithreaded struct extern "%" mz_uint { }
public multithreaded struct extern "%" SDL_SysWMmsg { }
public multithreaded struct extern "%" "extenum" EGLContext { }
public multithreaded struct extern "%" EGLenum { }
public multithreaded struct extern "%" SDL_Haptic { }
public multithreaded struct extern "%" "extenum" GLeglImageOES { }
public multithreaded struct extern "%" "extenum" EGLClientBuffer { }
public multithreaded struct extern "%" GLclampf { }
public multithreaded struct extern "%" GLsizei { }
public multithreaded struct extern "%" EGLint { }
public multithreaded struct extern "%" EGLBoolean { }
public multithreaded struct extern "%" GLuint64 { }
public multithreaded struct extern "%" "extenum" EGLImageKHR { }
public multithreaded struct extern "%" SDL_Thread { }
public multithreaded struct extern "%" intf { }
public multithreaded struct extern "%" SDL_TimerID { }
public multithreaded struct extern "%" mz_uint64 { }
public multithreaded struct extern "%" SDL_Renderer { }
public multithreaded struct extern "%" SDL_cond { }
public multithreaded struct extern "%" khronos_ssize_t { }
public multithreaded struct extern "%" EGLuint64NV { }
public multithreaded struct extern "%" SDL_sem { }
public multithreaded struct extern "%" SDL_threadID { }
public multithreaded struct extern "%" SDL_Texture { }
public multithreaded struct extern "%" "extuint" SDL_AudioFormat { }
public multithreaded struct extern "%" "extint" khronos_int64_t { }
public multithreaded struct extern "%" mz_ulong { }
public multithreaded struct extern "%" "extenum" EGLDisplay { }
public multithreaded struct extern "%" "extenum" EGLSurface { }
public multithreaded struct extern "%" "extuint" SDL_AudioDeviceID { }
public multithreaded struct extern "%" GLfloat { }
public multithreaded struct extern "%" "extenum" SDL_GLContext { }
public multithreaded struct extern "%" "extenum" EGLSyncKHR { }
public multithreaded struct extern "%" "extenum" EGLSyncNV { }
public multithreaded struct extern "%" khronos_stime_nanoseconds_t { }
public multithreaded struct extern "%" "extuint" khronos_uint32_t { }
public multithreaded struct extern "%" uLong { }
public multithreaded struct extern "%" SDL_TLSID { }
public multithreaded struct extern "%" SDL_Window { }
public multithreaded struct extern "%" EGLNativeFileDescriptorKHR { }
public multithreaded struct extern "%" MD5UINT4 { }
public multithreaded struct extern "%" "extint" SDL_GestureID { }
public multithreaded struct extern "%" "extint" SDL_Keycode { }
public multithreaded struct extern "%" GLubyte { }
public multithreaded struct extern "%" uIntf { }
public multithreaded struct extern "%" khronos_uint16_t { }
public multithreaded struct extern "%" GLfixed { }
public multithreaded struct extern "%" "extint" khronos_int32_t { }
public multithreaded struct extern "%" GLint64 { }
public multithreaded struct extern "%" GLushort { }
public multithreaded struct extern "%" mz_uint8 { }
public multithreaded struct extern "%" GLvoid { }
public multithreaded struct extern "%" "extenum" voidp { }
public multithreaded struct extern "%" TTF_Font { }
public multithreaded struct extern "%" "extint" SDL_TouchID { }
public multithreaded struct extern "%" SDL_GameController { }
public multithreaded struct extern "%" mz_uint16 { }
public multithreaded struct extern "%" NativePixmapType { }
public multithreaded struct extern "%" EGLTimeNV { }
public multithreaded struct extern "%" GLchar { }
public multithreaded struct extern "%" NSWindow { }
public multithreaded struct extern "%" GLenum { }
public multithreaded struct extern "%" "extenum" EGLStreamKHR { }
public multithreaded struct extern "%" mz_bool { }
public multithreaded struct extern "%" mz_int64 { }
public multithreaded struct extern "%" NativeDisplayType { }
public multithreaded struct extern "%" khronos_uintptr_t { }
public multithreaded struct extern "%" khronos_float_t { }
public multithreaded struct extern "%" EGLNativePixmapType { }
public multithreaded struct extern "%" UIWindow { }
public multithreaded struct extern "%" EGLuint64KHR { }
public multithreaded struct extern "%" "extint" SDL_JoystickID { }
public multithreaded struct extern "%" "extenum" EGLNativeDisplayType { }
public multithreaded struct extern "%" SDL_Joystick { }
public multithreaded struct extern "%" SDL_mutex { }
public multithreaded struct extern "%" GLuint { }
public multithreaded struct extern "%" "extenum" SDL_iconv_t { }
public multithreaded struct extern "%" tinfl_decompressor { }
public multithreaded struct extern "%" mz_uint32 { }
public multithreaded struct extern "%" "extint" SDL_FingerID { }
public multithreaded struct extern "%" uLongf { }
public multithreaded struct extern "%" "extenum" voidpf { }
public multithreaded struct extern "%" GLbyte { }
public multithreaded struct extern "%" tinfl_bit_buf_t { }
public multithreaded struct extern "%" EGLTimeKHR { }
public multithreaded struct extern "%" uInt { }
public multithreaded struct extern "%" "extuint" khronos_uint64_t { }
public multithreaded struct extern "%" EGLNativeWindowType { }
public multithreaded struct extern "%" SDL_Cursor { }
public multithreaded struct extern "%" Bytef { }
public multithreaded struct extern "%" khronos_intptr_t { }
public multithreaded struct extern "%" khronos_uint8_t { }
public multithreaded struct extern "%" UIViewController { }
public multithreaded struct extern "%" GLboolean { }
public multithreaded struct extern "%" GLintptr { }
public multithreaded struct extern "%" mz_zip_internal_state { }
public multithreaded struct extern "%" GLsizeiptr { }
public multithreaded struct extern "%" GLshort { }
public multithreaded struct extern "%"
mz_zip_writer_add_state {
  public rawptr{mz_zip_archive} m_pZip;
  public mz_uint64 m_cur_archive_file_ofs;
  public mz_uint64 m_comp_size;
}
public multithreaded struct extern "%"
tinfl_huff_table {
  public unit m_code_size;
  /* public  TINFL_FAST_LOOKUP_SIZE; */
}
public multithreaded struct extern "%"
SDL_JoyButtonEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 button;
  public Uint8 state;
  public Uint8 padding1;
  public Uint8 padding2;
}
public multithreaded struct extern "%"
SDL_HapticCustom {
  public Uint16 type;
  public SDL_HapticDirection direction;
  public Uint32 length;
  public Uint16 delay;
  public Uint16 button;
  public Uint16 interval;
  public Uint8 channels;
  public Uint16 period;
  public Uint16 samples;
  public rawptr{Uint16} data;
  public Uint16 attack_length;
  public Uint16 attack_level;
  public Uint16 fade_length;
  public Uint16 fade_level;
}
public multithreaded struct extern "%"
SDLTest_RandomContext {
  public uint a;
  public uint x;
  public uint c;
  public uint ah;
  public uint al;
}
public multithreaded struct extern "%"
SDL_assert_data {
  public int always_ignore;
  public uint trigger_count;
  public ccharptr condition;
  public ccharptr filename;
  public int linenum;
  public crawptr{SDL_assert_data} next;
}
public multithreaded struct extern "%"
SDL_ControllerAxisEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 axis;
  public Uint8 padding1;
  public Uint8 padding2;
  public Uint8 padding3;
  public Sint16 value;
  public Uint16 padding4;
}
public multithreaded struct extern "%"
SDL_Keysym {
  public SDL_Scancode scancode;
  public SDL_Keycode sym;
  public Uint16 mod;
  public Uint32 unused;
}
public multithreaded struct extern "%"
SDLTest_CommonState {
  public rawptr{charptr} argv;
  public Uint32 flags;
  public Uint32 verbose;
  public ccharptr videodriver;
  public int display;
  public ccharptr window_title;
  public ccharptr window_icon;
  public Uint32 window_flags;
  public int window_x;
  public int window_y;
  public int window_w;
  public int window_h;
  public int window_minW;
  public int window_minH;
  public int window_maxW;
  public int window_maxH;
  public int logical_w;
  public int logical_h;
  public float scale;
  public int depth;
  public int refresh_rate;
  public int num_windows;
  public rawptr{rawptr{SDL_Window}} windows;
  public ccharptr renderdriver;
  public Uint32 render_flags;
  public SDL_bool skip_renderer;
  public rawptr{rawptr{SDL_Renderer}} renderers;
  public rawptr{rawptr{SDL_Texture}} targets;
  public ccharptr audiodriver;
  public SDL_AudioSpec audiospec;
  public int gl_red_size;
  public int gl_green_size;
  public int gl_blue_size;
  public int gl_alpha_size;
  public int gl_buffer_size;
  public int gl_depth_size;
  public int gl_stencil_size;
  public int gl_double_buffer;
  public int gl_accum_red_size;
  public int gl_accum_green_size;
  public int gl_accum_blue_size;
  public int gl_accum_alpha_size;
  public int gl_stereo;
  public int gl_multisamplebuffers;
  public int gl_multisamplesamples;
  public int gl_retained_backing;
  public int gl_accelerated;
  public int gl_major_version;
  public int gl_minor_version;
  public int gl_debug;
  public int gl_profile_mask;
}
public multithreaded struct extern "%"
SDL_HapticCondition {
  public Uint16 type;
  public SDL_HapticDirection direction;
  public Uint32 length;
  public Uint16 delay;
  public Uint16 button;
  public Uint16 interval;
  /* public  right_sat; */
  /* public  left_sat; */
  /* public  right_coeff; */
  /* public  left_coeff; */
  /* public  deadband; */
  /* public  center; */
}
public multithreaded struct extern "%"
SDL_RWops {
  public Uint32 type;
}
public multithreaded struct extern "%"
SDL_Rect {
  public int x;
  public int y;
  public int w;
  public int h;
}
public multithreaded struct extern "%"
SDL_AudioCVT {
  public int needed;
  public SDL_AudioFormat src_format;
  public SDL_AudioFormat dst_format;
  public double rate_incr;
  public rawptr{Uint8} buf;
  public int len;
  public int len_cvt;
  public int len_mult;
  public double len_ratio;
  /* public  filters; */
  public int filter_index;
}
public multithreaded struct extern "%"
SDL_WindowShapeMode {
  public WindowShapeMode mode;
  public SDL_WindowShapeParams parameters;
}
public multithreaded struct extern "%"
SDL_Color {
  public Uint8 r;
  public Uint8 g;
  public Uint8 b;
  public Uint8 a;
}
public multithreaded struct extern "%"
SDLTest_TestSuiteReference {
  public charptr name;
  /* public  testSetUp; */
  public rawptr{crawptr{SDLTest_TestCaseReference}} testCases;
  /* public  testTearDown; */
}
public multithreaded struct extern "%"
SDL_ControllerButtonEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 button;
  public Uint8 state;
  public Uint8 padding1;
  public Uint8 padding2;
}
public multithreaded struct extern "%"
SDL_CommonEvent {
  public Uint32 type;
  public Uint32 timestamp;
}
public multithreaded struct extern "%"
SDL_UserEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Sint32 code;
  public rawptr{void} data1;
  public rawptr{void} data2;
}
public multithreaded struct extern "%"
SDL_MessageBoxData {
  public Uint32 flags;
  public rawptr{SDL_Window} window;
  public ccharptr title;
  public ccharptr message;
  public int numbuttons;
  public crawptr{SDL_MessageBoxButtonData} buttons;
  public crawptr{SDL_MessageBoxColorScheme} colorScheme;
}
public multithreaded struct extern "%"
SDL_Palette {
  public int ncolors;
  public rawptr{SDL_Color} colors;
  public Uint32 version;
  public int refcount;
}
public multithreaded struct extern "%"
SDL_JoyHatEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 hat;
  public Uint8 value;
  public Uint8 padding1;
  public Uint8 padding2;
}
public multithreaded struct extern "%"
SDL_ControllerDeviceEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Sint32 which;
}
public multithreaded struct extern "%"
SDL_TextEditingEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public unit text;
  public Sint32 start;
  public Sint32 length;
}
public multithreaded struct extern "%"
SDL_WindowShapeParams {
  public Uint8 binarizationCutoff;
  public SDL_Color colorKey;
}
public multithreaded struct extern "%"
SDL_RendererInfo {
  public ccharptr name;
  public Uint32 flags;
  public Uint32 num_texture_formats;
  /* public  texture_formats; */
  public int max_texture_width;
  public int max_texture_height;
}
public multithreaded struct extern "%"
SDL_MessageBoxButtonData {
  public Uint32 flags;
  public int buttonid;
  public ccharptr text;
}
public multithreaded struct extern "%"
SDL_Finger {
  public SDL_FingerID id;
  public float x;
  public float y;
  public float pressure;
}
public multithreaded struct extern "%"
SDL_HapticEffect {
  public Uint16 type;
  public SDL_HapticConstant constant;
  public SDL_HapticPeriodic periodic;
  public SDL_HapticCondition condition;
  public SDL_HapticRamp ramp;
  public SDL_HapticLeftRight leftright;
  public SDL_HapticCustom custom;
}
public multithreaded struct extern "%"
mz_stream {
}
public multithreaded struct extern "%"
SDL_OSEvent {
  public Uint32 type;
  public Uint32 timestamp;
}
public multithreaded struct extern "%"
SDL_TouchFingerEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_TouchID touchId;
  public SDL_FingerID fingerId;
  public float x;
  public float y;
  public float dx;
  public float dy;
  public float pressure;
}
public multithreaded struct extern "%"
SDL_SysWMEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public rawptr{SDL_SysWMmsg} msg;
}
public multithreaded struct extern "%"
SDL_JoyDeviceEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Sint32 which;
}
public multithreaded struct extern "%"
SDL_HapticPeriodic {
  public Uint16 type;
  public SDL_HapticDirection direction;
  public Uint32 length;
  public Uint16 delay;
  public Uint16 button;
  public Uint16 interval;
  public Uint16 period;
  public Sint16 magnitude;
  public Sint16 offset;
  public Uint16 phase;
  public Uint16 attack_length;
  public Uint16 attack_level;
  public Uint16 fade_length;
  public Uint16 fade_level;
}
public multithreaded struct extern "%"
SDL_GameControllerButtonBind {
  public SDL_GameControllerBindType bindType;
}
public multithreaded struct extern "%"
SDL_Point {
  public int x;
  public int y;
}
public multithreaded struct extern "%"
SDL_HapticLeftRight {
  public Uint16 type;
  public Uint32 length;
  public Uint16 large_magnitude;
  public Uint16 small_magnitude;
}
public multithreaded struct extern "%"
SDL_MessageBoxColorScheme {
  public unit colors;
}
public multithreaded struct extern "%"
SDL_JoyBallEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 ball;
  public Uint8 padding1;
  public Uint8 padding2;
  public Uint8 padding3;
  public Sint16 xrel;
  public Sint16 yrel;
}
public multithreaded struct extern "%"
SDL_HapticDirection {
  public Uint8 type;
  /* public  dir; */
}
public multithreaded struct extern "%"
mz_zip_array {
  public rawptr{void} m_p;
  public size_t m_size;
  public size_t m_capacity;
  public mz_uint m_element_size;
}
public multithreaded struct extern "%"
SDL_KeyboardEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Uint8 state;
  public Uint8 repeat;
  public Uint8 padding2;
  public Uint8 padding3;
  public SDL_Keysym keysym;
}
public multithreaded struct extern "%"
SDL_JoystickGUID {
  /* public  data; */
}
public multithreaded struct extern "%"
SDL_Surface {
  public Uint32 flags;
  public rawptr{SDL_PixelFormat} format;
  public int w;
  public int h;
  public int pitch;
  public rawptr{void} pixels;
  public rawptr{void} userdata;
  public int locked;
  public rawptr{void} lock_data;
  public SDL_Rect clip_rect;
  /* public  map; */
  public int refcount;
}
public multithreaded struct extern "%"
SDL_PixelFormat {
  public Uint32 format;
  public rawptr{SDL_Palette} palette;
  public Uint8 BitsPerPixel;
  public Uint8 BytesPerPixel;
  /* public  padding; */
  public Uint32 Rmask;
  public Uint32 Gmask;
  public Uint32 Bmask;
  public Uint32 Amask;
  public Uint8 Rloss;
  public Uint8 Gloss;
  public Uint8 Bloss;
  public Uint8 Aloss;
  public Uint8 Rshift;
  public Uint8 Gshift;
  public Uint8 Bshift;
  public Uint8 Ashift;
  public int refcount;
  public rawptr{SDL_PixelFormat} next;
}
public multithreaded struct extern "%"
SDL_WindowEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Uint8 event;
  public Uint8 padding1;
  public Uint8 padding2;
  public Uint8 padding3;
  public Sint32 data1;
  public Sint32 data2;
}
public multithreaded struct extern "%"
SDL_HapticConstant {
  public Uint16 type;
  public SDL_HapticDirection direction;
  public Uint32 length;
  public Uint16 delay;
  public Uint16 button;
  public Uint16 interval;
  public Sint16 level;
  public Uint16 attack_length;
  public Uint16 attack_level;
  public Uint16 fade_length;
  public Uint16 fade_level;
}
public multithreaded struct extern "%"
SDL_version {
  public Uint8 major;
  public Uint8 minor;
  public Uint8 patch;
}
public multithreaded struct extern "%"
SDL_JoyAxisEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_JoystickID which;
  public Uint8 axis;
  public Uint8 padding1;
  public Uint8 padding2;
  public Uint8 padding3;
  public Sint16 value;
  public Uint16 padding4;
}
public multithreaded struct extern "%"
SDLTest_Crc32Context {
  /* public  crc32_table; */
}
public multithreaded struct extern "%"
SDLTest_TestCaseReference {
  /* public  testCase; */
  public charptr name;
  public charptr description;
  public int enabled;
}
public multithreaded struct extern "%"
tdefl_sym_freq {
  public mz_uint16 m_key;
  public mz_uint16 m_sym_index;
}
public multithreaded struct extern "%"
SDL_TextInputEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public unit text;
}
public multithreaded struct extern "%"
SDL_DisplayMode {
  public Uint32 format;
  public int w;
  public int h;
  public int refresh_rate;
  public rawptr{void} driverdata;
}
public multithreaded struct extern "%"
SDL_MultiGestureEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_TouchID touchId;
  public float dTheta;
  public float dDist;
  public float x;
  public float y;
  public Uint16 numFingers;
  public Uint16 padding;
}
public multithreaded struct extern "%"
SDL_AudioSpec {
  public int freq;
  public SDL_AudioFormat format;
  public Uint8 channels;
  public Uint8 silence;
  public Uint16 samples;
  public Uint16 padding;
  public Uint32 size;
  /* public  callback; */
  public rawptr{void} userdata;
}
public multithreaded struct extern "%"
inflate_state {
  public tinfl_decompressor m_decomp;
  public unit m_dict;
  public tinfl_status m_last_status;
}
public multithreaded struct extern "%"
SDLTest_Md5Context {
  /* public  i; */
  /* public  buf; */
  /* public  in; */
  /* public  digest; */
}
public multithreaded struct extern "%"
SDL_DropEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public charptr file;
}
public multithreaded struct extern "%"
mz_zip_archive_file_stat {
  public mz_uint32 m_file_index;
  public mz_uint32 m_central_dir_ofs;
  public mz_uint16 m_version_made_by;
  public mz_uint16 m_version_needed;
  public mz_uint16 m_bit_flag;
  public mz_uint16 m_method;
  /* public  m_time; */
  public mz_uint32 m_crc32;
  public mz_uint64 m_comp_size;
  public mz_uint64 m_uncomp_size;
  public mz_uint16 m_internal_attr;
  public mz_uint32 m_external_attr;
  public mz_uint64 m_local_header_ofs;
  public mz_uint32 m_comment_size;
  public unit m_filename;
  public unit m_comment;
}
public multithreaded struct extern "%"
SDL_atomic_t {
  public int value;
}
public multithreaded struct extern "%"
SDL_QuitEvent {
  public Uint32 type;
  public Uint32 timestamp;
}
public multithreaded struct extern "%"
mz_zip_archive {
  public mz_uint64 m_archive_size;
  public mz_uint64 m_central_directory_file_ofs;
  public mz_uint m_total_files;
  public mz_zip_mode m_zip_mode;
  public mz_uint m_file_offset_alignment;
  /* public  m_pAlloc; */
  /* public  m_pFree; */
  /* public  m_pRealloc; */
  public rawptr{void} m_pAlloc_opaque;
  /* public  m_pRead; */
  /* public  m_pWrite; */
  public rawptr{void} m_pIO_opaque;
  public rawptr{mz_zip_internal_state} m_pState;
}
public multithreaded struct extern "%"
SDL_MouseMotionEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Uint32 which;
  public Uint32 state;
  public Sint32 x;
  public Sint32 y;
  public Sint32 xrel;
  public Sint32 yrel;
}
public multithreaded struct extern "%"
SDL_HapticRamp {
  public Uint16 type;
  public SDL_HapticDirection direction;
  public Uint32 length;
  public Uint16 delay;
  public Uint16 button;
  public Uint16 interval;
  public Sint16 start;
  public Sint16 end;
  public Uint16 attack_length;
  public Uint16 attack_level;
  public Uint16 fade_length;
  public Uint16 fade_level;
}
public multithreaded struct extern "%"
SDLTest_SurfaceImage_t {
  public int width;
  public int height;
  public uint bytes_per_pixel;
  public ccharptr pixel_data;
}
public multithreaded struct extern "%"
SDL_Event {
  public Uint32 type;
  public SDL_CommonEvent common;
  public SDL_WindowEvent window;
  public SDL_KeyboardEvent key;
  public SDL_TextEditingEvent edit;
  public SDL_TextInputEvent text;
  public SDL_MouseMotionEvent motion;
  public SDL_MouseButtonEvent button;
  public SDL_MouseWheelEvent wheel;
  public SDL_JoyAxisEvent jaxis;
  public SDL_JoyBallEvent jball;
  public SDL_JoyHatEvent jhat;
  public SDL_JoyButtonEvent jbutton;
  public SDL_JoyDeviceEvent jdevice;
  public SDL_ControllerAxisEvent caxis;
  public SDL_ControllerButtonEvent cbutton;
  public SDL_ControllerDeviceEvent cdevice;
  public SDL_QuitEvent quit;
  public SDL_UserEvent user;
  public SDL_SysWMEvent syswm;
  public SDL_TouchFingerEvent tfinger;
  public SDL_MultiGestureEvent mgesture;
  public SDL_DollarGestureEvent dgesture;
  public SDL_DropEvent drop;
  /* public  padding; */
}
public multithreaded struct extern "%"
SDL_MessageBoxColor {
  public Uint8 r;
  public Uint8 g;
  public Uint8 b;
}
public multithreaded struct extern "%"
tdefl_output_buffer {
  public size_t m_size;
  public size_t m_capacity;
  public rawptr{mz_uint8} m_pBuf;
  public mz_bool m_expandable;
}
public multithreaded struct extern "%"
tdefl_compressor {
  /* public  m_pPut_buf_func; */
  public rawptr{void} m_pPut_buf_user;
  public mz_uint m_flags;
  public int m_greedy_parsing;
  public mz_uint m_adler32;
  public mz_uint m_lookahead_pos;
  public mz_uint m_lookahead_size;
  public mz_uint m_dict_size;
  public rawptr{mz_uint8} m_pLZ_code_buf;
  public mz_uint m_num_flags_left;
  public mz_uint m_total_lz_bytes;
  public mz_uint m_lz_code_buf_dict_pos;
  public mz_uint m_bits_in;
  public mz_uint m_bit_buffer;
  public mz_uint m_saved_match_dist;
  public mz_uint m_saved_match_len;
  public mz_uint m_saved_lit;
  public mz_uint m_output_flush_ofs;
  public mz_uint m_output_flush_remaining;
  public mz_uint m_finished;
  public mz_uint m_block_index;
  public mz_uint m_wants_to_finish;
  public tdefl_status m_prev_return_status;
  public crawptr{void} m_pIn_buf;
  public rawptr{void} m_pOut_buf;
  public rawptr{size_t} m_pIn_buf_size;
  public tdefl_flush m_flush;
  public crawptr{mz_uint8} m_pSrc;
  public size_t m_src_buf_left;
  public size_t m_out_buf_ofs;
  /* public  ; */
  /* public  ; */
  /* public  ; */
  /* public  ; */
  public unit m_lz_code_buf;
  public unit m_next;
  public unit m_hash;
  public unit m_output_buf;
}
public multithreaded struct extern "%"
SDL_MouseWheelEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Uint32 which;
  public Sint32 x;
  public Sint32 y;
}
public multithreaded struct extern "%"
SDL_DollarGestureEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public SDL_TouchID touchId;
  public SDL_GestureID gestureId;
  public Uint32 numFingers;
  public float error;
  public float x;
  public float y;
}
public multithreaded struct extern "%"
SDL_MouseButtonEvent {
  public Uint32 type;
  public Uint32 timestamp;
  public Uint32 windowID;
  public Uint32 which;
  public Uint8 button;
  public Uint8 state;
  public Uint8 clicks;
  public Uint8 padding1;
  public Sint32 x;
  public Sint32 y;
}
/* enum khronos_boolean_enum_t */
public extern "%" SDL_Enum KHRONOS_FALSE;
public extern "%" SDL_Enum KHRONOS_TRUE;
public extern "%" SDL_Enum KHRONOS_BOOLEAN_ENUM_FORCE_SIZE;
public multithreaded struct extern "int" "extenum" tdefl_flush { }
public extern "%" tdefl_flush TDEFL_NO_FLUSH;
public extern "%" tdefl_flush TDEFL_SYNC_FLUSH;
public extern "%" tdefl_flush TDEFL_FULL_FLUSH;
public extern "%" tdefl_flush TDEFL_FINISH;
public multithreaded struct extern "int" "extenum" SDL_SystemCursor { }
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_ARROW;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_IBEAM;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_WAIT;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_CROSSHAIR;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_WAITARROW;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_SIZENWSE;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_SIZENESW;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_SIZEWE;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_SIZENS;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_SIZEALL;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_NO;
public extern "%" SDL_SystemCursor SDL_SYSTEM_CURSOR_HAND;
public extern "%" SDL_SystemCursor SDL_NUM_SYSTEM_CURSORS;
public multithreaded struct extern "int" "extenum" SDL_assert_state { }
public extern "%" SDL_assert_state SDL_ASSERTION_RETRY;
public extern "%" SDL_assert_state SDL_ASSERTION_BREAK;
public extern "%" SDL_assert_state SDL_ASSERTION_ABORT;
public extern "%" SDL_assert_state SDL_ASSERTION_IGNORE;
public extern "%" SDL_assert_state SDL_ASSERTION_ALWAYS_IGNORE;
public multithreaded struct extern "int" "extenum" SDL_bool { }
public extern "%" SDL_bool SDL_FALSE;
public extern "%" SDL_bool SDL_TRUE;
/* enum SDL_MessageBoxButtonFlags */
public extern "%" SDL_Enum SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT;
public extern "%" SDL_Enum SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT;
/* enum SDL_EventType */
public extern "%" SDL_Enum SDL_FIRSTEVENT;
public extern "%" SDL_Enum SDL_QUIT;
public extern "%" SDL_Enum SDL_APP_TERMINATING;
public extern "%" SDL_Enum SDL_APP_LOWMEMORY;
public extern "%" SDL_Enum SDL_APP_WILLENTERBACKGROUND;
public extern "%" SDL_Enum SDL_APP_DIDENTERBACKGROUND;
public extern "%" SDL_Enum SDL_APP_WILLENTERFOREGROUND;
public extern "%" SDL_Enum SDL_APP_DIDENTERFOREGROUND;
public extern "%" SDL_Enum SDL_WINDOWEVENT;
public extern "%" SDL_Enum SDL_SYSWMEVENT;
public extern "%" SDL_Enum SDL_KEYDOWN;
public extern "%" SDL_Enum SDL_KEYUP;
public extern "%" SDL_Enum SDL_TEXTEDITING;
public extern "%" SDL_Enum SDL_TEXTINPUT;
public extern "%" SDL_Enum SDL_MOUSEMOTION;
public extern "%" SDL_Enum SDL_MOUSEBUTTONDOWN;
public extern "%" SDL_Enum SDL_MOUSEBUTTONUP;
public extern "%" SDL_Enum SDL_MOUSEWHEEL;
public extern "%" SDL_Enum SDL_JOYAXISMOTION;
public extern "%" SDL_Enum SDL_JOYBALLMOTION;
public extern "%" SDL_Enum SDL_JOYHATMOTION;
public extern "%" SDL_Enum SDL_JOYBUTTONDOWN;
public extern "%" SDL_Enum SDL_JOYBUTTONUP;
public extern "%" SDL_Enum SDL_JOYDEVICEADDED;
public extern "%" SDL_Enum SDL_JOYDEVICEREMOVED;
public extern "%" SDL_Enum SDL_CONTROLLERAXISMOTION;
public extern "%" SDL_Enum SDL_CONTROLLERBUTTONDOWN;
public extern "%" SDL_Enum SDL_CONTROLLERBUTTONUP;
public extern "%" SDL_Enum SDL_CONTROLLERDEVICEADDED;
public extern "%" SDL_Enum SDL_CONTROLLERDEVICEREMOVED;
public extern "%" SDL_Enum SDL_CONTROLLERDEVICEREMAPPED;
public extern "%" SDL_Enum SDL_FINGERDOWN;
public extern "%" SDL_Enum SDL_FINGERUP;
public extern "%" SDL_Enum SDL_FINGERMOTION;
public extern "%" SDL_Enum SDL_DOLLARGESTURE;
public extern "%" SDL_Enum SDL_DOLLARRECORD;
public extern "%" SDL_Enum SDL_MULTIGESTURE;
public extern "%" SDL_Enum SDL_CLIPBOARDUPDATE;
public extern "%" SDL_Enum SDL_DROPFILE;
public extern "%" SDL_Enum SDL_RENDER_TARGETS_RESET;
public extern "%" SDL_Enum SDL_USEREVENT;
public extern "%" SDL_Enum SDL_LASTEVENT;
public multithreaded struct extern "int" "extenum" SDL_ThreadPriority { }
public extern "%" SDL_ThreadPriority SDL_THREAD_PRIORITY_LOW;
public extern "%" SDL_ThreadPriority SDL_THREAD_PRIORITY_NORMAL;
public extern "%" SDL_ThreadPriority SDL_THREAD_PRIORITY_HIGH;
public multithreaded struct extern "int" "extenum" SDL_HintPriority { }
public extern "%" SDL_HintPriority SDL_HINT_DEFAULT;
public extern "%" SDL_HintPriority SDL_HINT_NORMAL;
public extern "%" SDL_HintPriority SDL_HINT_OVERRIDE;
public multithreaded struct extern "int" "extenum" SDL_Scancode { }
public extern "%" SDL_Scancode SDL_SCANCODE_UNKNOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_A;
public extern "%" SDL_Scancode SDL_SCANCODE_B;
public extern "%" SDL_Scancode SDL_SCANCODE_C;
public extern "%" SDL_Scancode SDL_SCANCODE_D;
public extern "%" SDL_Scancode SDL_SCANCODE_E;
public extern "%" SDL_Scancode SDL_SCANCODE_F;
public extern "%" SDL_Scancode SDL_SCANCODE_G;
public extern "%" SDL_Scancode SDL_SCANCODE_H;
public extern "%" SDL_Scancode SDL_SCANCODE_I;
public extern "%" SDL_Scancode SDL_SCANCODE_J;
public extern "%" SDL_Scancode SDL_SCANCODE_K;
public extern "%" SDL_Scancode SDL_SCANCODE_L;
public extern "%" SDL_Scancode SDL_SCANCODE_M;
public extern "%" SDL_Scancode SDL_SCANCODE_N;
public extern "%" SDL_Scancode SDL_SCANCODE_O;
public extern "%" SDL_Scancode SDL_SCANCODE_P;
public extern "%" SDL_Scancode SDL_SCANCODE_Q;
public extern "%" SDL_Scancode SDL_SCANCODE_R;
public extern "%" SDL_Scancode SDL_SCANCODE_S;
public extern "%" SDL_Scancode SDL_SCANCODE_T;
public extern "%" SDL_Scancode SDL_SCANCODE_U;
public extern "%" SDL_Scancode SDL_SCANCODE_V;
public extern "%" SDL_Scancode SDL_SCANCODE_W;
public extern "%" SDL_Scancode SDL_SCANCODE_X;
public extern "%" SDL_Scancode SDL_SCANCODE_Y;
public extern "%" SDL_Scancode SDL_SCANCODE_Z;
public extern "%" SDL_Scancode SDL_SCANCODE_1;
public extern "%" SDL_Scancode SDL_SCANCODE_2;
public extern "%" SDL_Scancode SDL_SCANCODE_3;
public extern "%" SDL_Scancode SDL_SCANCODE_4;
public extern "%" SDL_Scancode SDL_SCANCODE_5;
public extern "%" SDL_Scancode SDL_SCANCODE_6;
public extern "%" SDL_Scancode SDL_SCANCODE_7;
public extern "%" SDL_Scancode SDL_SCANCODE_8;
public extern "%" SDL_Scancode SDL_SCANCODE_9;
public extern "%" SDL_Scancode SDL_SCANCODE_0;
public extern "%" SDL_Scancode SDL_SCANCODE_RETURN;
public extern "%" SDL_Scancode SDL_SCANCODE_ESCAPE;
public extern "%" SDL_Scancode SDL_SCANCODE_BACKSPACE;
public extern "%" SDL_Scancode SDL_SCANCODE_TAB;
public extern "%" SDL_Scancode SDL_SCANCODE_SPACE;
public extern "%" SDL_Scancode SDL_SCANCODE_MINUS;
public extern "%" SDL_Scancode SDL_SCANCODE_EQUALS;
public extern "%" SDL_Scancode SDL_SCANCODE_LEFTBRACKET;
public extern "%" SDL_Scancode SDL_SCANCODE_RIGHTBRACKET;
public extern "%" SDL_Scancode SDL_SCANCODE_BACKSLASH;
public extern "%" SDL_Scancode SDL_SCANCODE_NONUSHASH;
public extern "%" SDL_Scancode SDL_SCANCODE_SEMICOLON;
public extern "%" SDL_Scancode SDL_SCANCODE_APOSTROPHE;
public extern "%" SDL_Scancode SDL_SCANCODE_GRAVE;
public extern "%" SDL_Scancode SDL_SCANCODE_COMMA;
public extern "%" SDL_Scancode SDL_SCANCODE_PERIOD;
public extern "%" SDL_Scancode SDL_SCANCODE_SLASH;
public extern "%" SDL_Scancode SDL_SCANCODE_CAPSLOCK;
public extern "%" SDL_Scancode SDL_SCANCODE_F1;
public extern "%" SDL_Scancode SDL_SCANCODE_F2;
public extern "%" SDL_Scancode SDL_SCANCODE_F3;
public extern "%" SDL_Scancode SDL_SCANCODE_F4;
public extern "%" SDL_Scancode SDL_SCANCODE_F5;
public extern "%" SDL_Scancode SDL_SCANCODE_F6;
public extern "%" SDL_Scancode SDL_SCANCODE_F7;
public extern "%" SDL_Scancode SDL_SCANCODE_F8;
public extern "%" SDL_Scancode SDL_SCANCODE_F9;
public extern "%" SDL_Scancode SDL_SCANCODE_F10;
public extern "%" SDL_Scancode SDL_SCANCODE_F11;
public extern "%" SDL_Scancode SDL_SCANCODE_F12;
public extern "%" SDL_Scancode SDL_SCANCODE_PRINTSCREEN;
public extern "%" SDL_Scancode SDL_SCANCODE_SCROLLLOCK;
public extern "%" SDL_Scancode SDL_SCANCODE_PAUSE;
public extern "%" SDL_Scancode SDL_SCANCODE_INSERT;
public extern "%" SDL_Scancode SDL_SCANCODE_HOME;
public extern "%" SDL_Scancode SDL_SCANCODE_PAGEUP;
public extern "%" SDL_Scancode SDL_SCANCODE_DELETE;
public extern "%" SDL_Scancode SDL_SCANCODE_END;
public extern "%" SDL_Scancode SDL_SCANCODE_PAGEDOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_RIGHT;
public extern "%" SDL_Scancode SDL_SCANCODE_LEFT;
public extern "%" SDL_Scancode SDL_SCANCODE_DOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_UP;
public extern "%" SDL_Scancode SDL_SCANCODE_NUMLOCKCLEAR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_DIVIDE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MULTIPLY;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MINUS;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_PLUS;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_ENTER;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_1;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_2;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_3;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_4;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_5;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_6;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_7;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_8;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_9;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_0;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_PERIOD;
public extern "%" SDL_Scancode SDL_SCANCODE_NONUSBACKSLASH;
public extern "%" SDL_Scancode SDL_SCANCODE_APPLICATION;
public extern "%" SDL_Scancode SDL_SCANCODE_POWER;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_EQUALS;
public extern "%" SDL_Scancode SDL_SCANCODE_F13;
public extern "%" SDL_Scancode SDL_SCANCODE_F14;
public extern "%" SDL_Scancode SDL_SCANCODE_F15;
public extern "%" SDL_Scancode SDL_SCANCODE_F16;
public extern "%" SDL_Scancode SDL_SCANCODE_F17;
public extern "%" SDL_Scancode SDL_SCANCODE_F18;
public extern "%" SDL_Scancode SDL_SCANCODE_F19;
public extern "%" SDL_Scancode SDL_SCANCODE_F20;
public extern "%" SDL_Scancode SDL_SCANCODE_F21;
public extern "%" SDL_Scancode SDL_SCANCODE_F22;
public extern "%" SDL_Scancode SDL_SCANCODE_F23;
public extern "%" SDL_Scancode SDL_SCANCODE_F24;
public extern "%" SDL_Scancode SDL_SCANCODE_EXECUTE;
public extern "%" SDL_Scancode SDL_SCANCODE_HELP;
public extern "%" SDL_Scancode SDL_SCANCODE_MENU;
public extern "%" SDL_Scancode SDL_SCANCODE_SELECT;
public extern "%" SDL_Scancode SDL_SCANCODE_STOP;
public extern "%" SDL_Scancode SDL_SCANCODE_AGAIN;
public extern "%" SDL_Scancode SDL_SCANCODE_UNDO;
public extern "%" SDL_Scancode SDL_SCANCODE_CUT;
public extern "%" SDL_Scancode SDL_SCANCODE_COPY;
public extern "%" SDL_Scancode SDL_SCANCODE_PASTE;
public extern "%" SDL_Scancode SDL_SCANCODE_FIND;
public extern "%" SDL_Scancode SDL_SCANCODE_MUTE;
public extern "%" SDL_Scancode SDL_SCANCODE_VOLUMEUP;
public extern "%" SDL_Scancode SDL_SCANCODE_VOLUMEDOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_COMMA;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_EQUALSAS400;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL1;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL2;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL3;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL4;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL5;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL6;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL7;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL8;
public extern "%" SDL_Scancode SDL_SCANCODE_INTERNATIONAL9;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG1;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG2;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG3;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG4;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG5;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG6;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG7;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG8;
public extern "%" SDL_Scancode SDL_SCANCODE_LANG9;
public extern "%" SDL_Scancode SDL_SCANCODE_ALTERASE;
public extern "%" SDL_Scancode SDL_SCANCODE_SYSREQ;
public extern "%" SDL_Scancode SDL_SCANCODE_CANCEL;
public extern "%" SDL_Scancode SDL_SCANCODE_CLEAR;
public extern "%" SDL_Scancode SDL_SCANCODE_PRIOR;
public extern "%" SDL_Scancode SDL_SCANCODE_RETURN2;
public extern "%" SDL_Scancode SDL_SCANCODE_SEPARATOR;
public extern "%" SDL_Scancode SDL_SCANCODE_OUT;
public extern "%" SDL_Scancode SDL_SCANCODE_OPER;
public extern "%" SDL_Scancode SDL_SCANCODE_CLEARAGAIN;
public extern "%" SDL_Scancode SDL_SCANCODE_CRSEL;
public extern "%" SDL_Scancode SDL_SCANCODE_EXSEL;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_00;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_000;
public extern "%" SDL_Scancode SDL_SCANCODE_THOUSANDSSEPARATOR;
public extern "%" SDL_Scancode SDL_SCANCODE_DECIMALSEPARATOR;
public extern "%" SDL_Scancode SDL_SCANCODE_CURRENCYUNIT;
public extern "%" SDL_Scancode SDL_SCANCODE_CURRENCYSUBUNIT;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_LEFTPAREN;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_RIGHTPAREN;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_LEFTBRACE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_RIGHTBRACE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_TAB;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_BACKSPACE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_A;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_B;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_C;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_D;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_E;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_F;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_XOR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_POWER;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_PERCENT;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_LESS;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_GREATER;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_AMPERSAND;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_DBLAMPERSAND;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_VERTICALBAR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_DBLVERTICALBAR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_COLON;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_HASH;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_SPACE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_AT;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_EXCLAM;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMSTORE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMRECALL;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMCLEAR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMADD;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMSUBTRACT;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMMULTIPLY;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_MEMDIVIDE;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_PLUSMINUS;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_CLEAR;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_CLEARENTRY;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_BINARY;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_OCTAL;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_DECIMAL;
public extern "%" SDL_Scancode SDL_SCANCODE_KP_HEXADECIMAL;
public extern "%" SDL_Scancode SDL_SCANCODE_LCTRL;
public extern "%" SDL_Scancode SDL_SCANCODE_LSHIFT;
public extern "%" SDL_Scancode SDL_SCANCODE_LALT;
public extern "%" SDL_Scancode SDL_SCANCODE_LGUI;
public extern "%" SDL_Scancode SDL_SCANCODE_RCTRL;
public extern "%" SDL_Scancode SDL_SCANCODE_RSHIFT;
public extern "%" SDL_Scancode SDL_SCANCODE_RALT;
public extern "%" SDL_Scancode SDL_SCANCODE_RGUI;
public extern "%" SDL_Scancode SDL_SCANCODE_MODE;
public extern "%" SDL_Scancode SDL_SCANCODE_AUDIONEXT;
public extern "%" SDL_Scancode SDL_SCANCODE_AUDIOPREV;
public extern "%" SDL_Scancode SDL_SCANCODE_AUDIOSTOP;
public extern "%" SDL_Scancode SDL_SCANCODE_AUDIOPLAY;
public extern "%" SDL_Scancode SDL_SCANCODE_AUDIOMUTE;
public extern "%" SDL_Scancode SDL_SCANCODE_MEDIASELECT;
public extern "%" SDL_Scancode SDL_SCANCODE_WWW;
public extern "%" SDL_Scancode SDL_SCANCODE_MAIL;
public extern "%" SDL_Scancode SDL_SCANCODE_CALCULATOR;
public extern "%" SDL_Scancode SDL_SCANCODE_COMPUTER;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_SEARCH;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_HOME;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_BACK;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_FORWARD;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_STOP;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_REFRESH;
public extern "%" SDL_Scancode SDL_SCANCODE_AC_BOOKMARKS;
public extern "%" SDL_Scancode SDL_SCANCODE_BRIGHTNESSDOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_BRIGHTNESSUP;
public extern "%" SDL_Scancode SDL_SCANCODE_DISPLAYSWITCH;
public extern "%" SDL_Scancode SDL_SCANCODE_KBDILLUMTOGGLE;
public extern "%" SDL_Scancode SDL_SCANCODE_KBDILLUMDOWN;
public extern "%" SDL_Scancode SDL_SCANCODE_KBDILLUMUP;
public extern "%" SDL_Scancode SDL_SCANCODE_EJECT;
public extern "%" SDL_Scancode SDL_SCANCODE_SLEEP;
public extern "%" SDL_Scancode SDL_SCANCODE_APP1;
public extern "%" SDL_Scancode SDL_SCANCODE_APP2;
public extern "%" SDL_Scancode SDL_NUM_SCANCODES;
public multithreaded struct extern "int" "extenum" SDL_LogPriority { }
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_VERBOSE;
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_DEBUG;
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_INFO;
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_WARN;
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_ERROR;
public extern "%" SDL_LogPriority SDL_LOG_PRIORITY_CRITICAL;
public extern "%" SDL_LogPriority SDL_NUM_LOG_PRIORITIES;
/* enum SDL_WindowFlags */
public extern "%" SDL_Enum SDL_WINDOW_FULLSCREEN;
public extern "%" SDL_Enum SDL_WINDOW_OPENGL;
public extern "%" SDL_Enum SDL_WINDOW_SHOWN;
public extern "%" SDL_Enum SDL_WINDOW_HIDDEN;
public extern "%" SDL_Enum SDL_WINDOW_BORDERLESS;
public extern "%" SDL_Enum SDL_WINDOW_RESIZABLE;
public extern "%" SDL_Enum SDL_WINDOW_MINIMIZED;
public extern "%" SDL_Enum SDL_WINDOW_MAXIMIZED;
public extern "%" SDL_Enum SDL_WINDOW_INPUT_GRABBED;
public extern "%" SDL_Enum SDL_WINDOW_INPUT_FOCUS;
public extern "%" SDL_Enum SDL_WINDOW_MOUSE_FOCUS;
public extern "%" SDL_Enum SDL_WINDOW_FULLSCREEN_DESKTOP;
public extern "%" SDL_Enum SDL_WINDOW_FOREIGN;
public extern "%" SDL_Enum SDL_WINDOW_ALLOW_HIGHDPI;
/* enum mz_zip_flags */
public extern "%" SDL_Enum MZ_ZIP_FLAG_CASE_SENSITIVE;
public extern "%" SDL_Enum MZ_ZIP_FLAG_IGNORE_PATH;
public extern "%" SDL_Enum MZ_ZIP_FLAG_COMPRESSED_DATA;
public extern "%" SDL_Enum MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY;
/* enum SDL_MessageBoxColorType */
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_BACKGROUND;
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_TEXT;
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_BUTTON_BORDER;
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND;
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED;
public extern "%" SDL_Enum SDL_MESSAGEBOX_COLOR_MAX;
public multithreaded struct extern "int" "extenum" SDL_RendererFlip { }
public extern "%" SDL_RendererFlip SDL_FLIP_NONE;
public extern "%" SDL_RendererFlip SDL_FLIP_HORIZONTAL;
public extern "%" SDL_RendererFlip SDL_FLIP_VERTICAL;
public multithreaded struct extern "int" "extenum" SDL_Keymod { }
public extern "%" SDL_Keymod KMOD_NONE;
public extern "%" SDL_Keymod KMOD_LSHIFT;
public extern "%" SDL_Keymod KMOD_RSHIFT;
public extern "%" SDL_Keymod KMOD_LCTRL;
public extern "%" SDL_Keymod KMOD_RCTRL;
public extern "%" SDL_Keymod KMOD_LALT;
public extern "%" SDL_Keymod KMOD_RALT;
public extern "%" SDL_Keymod KMOD_LGUI;
public extern "%" SDL_Keymod KMOD_RGUI;
public extern "%" SDL_Keymod KMOD_NUM;
public extern "%" SDL_Keymod KMOD_CAPS;
public extern "%" SDL_Keymod KMOD_MODE;
public extern "%" SDL_Keymod KMOD_RESERVED;
/* enum SDL_WindowEventID */
public extern "%" SDL_Enum SDL_WINDOWEVENT_NONE;
public extern "%" SDL_Enum SDL_WINDOWEVENT_SHOWN;
public extern "%" SDL_Enum SDL_WINDOWEVENT_HIDDEN;
public extern "%" SDL_Enum SDL_WINDOWEVENT_EXPOSED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_MOVED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_RESIZED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_SIZE_CHANGED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_MINIMIZED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_MAXIMIZED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_RESTORED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_ENTER;
public extern "%" SDL_Enum SDL_WINDOWEVENT_LEAVE;
public extern "%" SDL_Enum SDL_WINDOWEVENT_FOCUS_GAINED;
public extern "%" SDL_Enum SDL_WINDOWEVENT_FOCUS_LOST;
public extern "%" SDL_Enum SDL_WINDOWEVENT_CLOSE;
public multithreaded struct extern "int" "extenum" SDL_GameControllerButton { }
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_INVALID;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_A;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_B;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_X;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_Y;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_BACK;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_GUIDE;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_START;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_LEFTSTICK;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_RIGHTSTICK;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_LEFTSHOULDER;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_RIGHTSHOULDER;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_DPAD_UP;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_DPAD_DOWN;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_DPAD_LEFT;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_DPAD_RIGHT;
public extern "%" SDL_GameControllerButton SDL_CONTROLLER_BUTTON_MAX;
public multithreaded struct extern "int" "extenum" SDL_BlendMode { }
public extern "%" SDL_BlendMode SDL_BLENDMODE_NONE;
public extern "%" SDL_BlendMode SDL_BLENDMODE_BLEND;
public extern "%" SDL_BlendMode SDL_BLENDMODE_ADD;
public extern "%" SDL_BlendMode SDL_BLENDMODE_MOD;
public multithreaded struct extern "int" "extenum" SDL_GameControllerAxis { }
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_INVALID;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_LEFTX;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_LEFTY;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_RIGHTX;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_RIGHTY;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_TRIGGERLEFT;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_TRIGGERRIGHT;
public extern "%" SDL_GameControllerAxis SDL_CONTROLLER_AXIS_MAX;
/* enum SDL_GLcontextFlag */
public extern "%" SDL_Enum SDL_GL_CONTEXT_DEBUG_FLAG;
public extern "%" SDL_Enum SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG;
public extern "%" SDL_Enum SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG;
public extern "%" SDL_Enum SDL_GL_CONTEXT_RESET_ISOLATION_FLAG;
public multithreaded struct extern "int" "extenum" SDL_eventaction { }
public extern "%" SDL_eventaction SDL_ADDEVENT;
public extern "%" SDL_eventaction SDL_PEEKEVENT;
public extern "%" SDL_eventaction SDL_GETEVENT;
/* enum SDL_RendererFlags */
public extern "%" SDL_Enum SDL_RENDERER_SOFTWARE;
public extern "%" SDL_Enum SDL_RENDERER_ACCELERATED;
public extern "%" SDL_Enum SDL_RENDERER_PRESENTVSYNC;
public extern "%" SDL_Enum SDL_RENDERER_TARGETTEXTURE;
/* enum SDL_TextureAccess */
public extern "%" SDL_Enum SDL_TEXTUREACCESS_STATIC;
public extern "%" SDL_Enum SDL_TEXTUREACCESS_STREAMING;
public extern "%" SDL_Enum SDL_TEXTUREACCESS_TARGET;
public multithreaded struct extern "int" "extenum" WindowShapeMode { }
public extern "%" WindowShapeMode ShapeModeDefault;
public extern "%" WindowShapeMode ShapeModeBinarizeAlpha;
public extern "%" WindowShapeMode ShapeModeReverseBinarizeAlpha;
public extern "%" WindowShapeMode ShapeModeColorKey;
/* enum SDL_SYSWM_TYPE */
public extern "%" SDL_Enum SDL_SYSWM_UNKNOWN;
public extern "%" SDL_Enum SDL_SYSWM_WINDOWS;
public extern "%" SDL_Enum SDL_SYSWM_X11;
public extern "%" SDL_Enum SDL_SYSWM_DIRECTFB;
public extern "%" SDL_Enum SDL_SYSWM_COCOA;
public extern "%" SDL_Enum SDL_SYSWM_UIKIT;
public extern "%" SDL_Enum SDL_SYSWM_WAYLAND;
public extern "%" SDL_Enum SDL_SYSWM_MIR;
public extern "%" SDL_Enum SDL_SYSWM_WINRT;
public multithreaded struct extern "int" "extenum" SDL_errorcode { }
public extern "%" SDL_errorcode SDL_ENOMEM;
public extern "%" SDL_errorcode SDL_EFREAD;
public extern "%" SDL_errorcode SDL_EFWRITE;
public extern "%" SDL_errorcode SDL_EFSEEK;
public extern "%" SDL_errorcode SDL_UNSUPPORTED;
public extern "%" SDL_errorcode SDL_LASTERROR;
public multithreaded struct extern "int" "extenum" mz_zip_mode { }
public extern "%" mz_zip_mode MZ_ZIP_MODE_INVALID;
public extern "%" mz_zip_mode MZ_ZIP_MODE_READING;
public extern "%" mz_zip_mode MZ_ZIP_MODE_WRITING;
public extern "%" mz_zip_mode MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED;
public multithreaded struct extern "int" "extenum" SDL_GLattr { }
public extern "%" SDL_GLattr SDL_GL_RED_SIZE;
public extern "%" SDL_GLattr SDL_GL_GREEN_SIZE;
public extern "%" SDL_GLattr SDL_GL_BLUE_SIZE;
public extern "%" SDL_GLattr SDL_GL_ALPHA_SIZE;
public extern "%" SDL_GLattr SDL_GL_BUFFER_SIZE;
public extern "%" SDL_GLattr SDL_GL_DOUBLEBUFFER;
public extern "%" SDL_GLattr SDL_GL_DEPTH_SIZE;
public extern "%" SDL_GLattr SDL_GL_STENCIL_SIZE;
public extern "%" SDL_GLattr SDL_GL_ACCUM_RED_SIZE;
public extern "%" SDL_GLattr SDL_GL_ACCUM_GREEN_SIZE;
public extern "%" SDL_GLattr SDL_GL_ACCUM_BLUE_SIZE;
public extern "%" SDL_GLattr SDL_GL_ACCUM_ALPHA_SIZE;
public extern "%" SDL_GLattr SDL_GL_STEREO;
public extern "%" SDL_GLattr SDL_GL_MULTISAMPLEBUFFERS;
public extern "%" SDL_GLattr SDL_GL_MULTISAMPLESAMPLES;
public extern "%" SDL_GLattr SDL_GL_ACCELERATED_VISUAL;
public extern "%" SDL_GLattr SDL_GL_RETAINED_BACKING;
public extern "%" SDL_GLattr SDL_GL_CONTEXT_MAJOR_VERSION;
public extern "%" SDL_GLattr SDL_GL_CONTEXT_MINOR_VERSION;
public extern "%" SDL_GLattr SDL_GL_CONTEXT_EGL;
public extern "%" SDL_GLattr SDL_GL_CONTEXT_FLAGS;
public extern "%" SDL_GLattr SDL_GL_CONTEXT_PROFILE_MASK;
public extern "%" SDL_GLattr SDL_GL_SHARE_WITH_CURRENT_CONTEXT;
public extern "%" SDL_GLattr SDL_GL_FRAMEBUFFER_SRGB_CAPABLE;
/* enum IMG_InitFlags */
public extern "%" SDL_Enum IMG_INIT_JPG;
public extern "%" SDL_Enum IMG_INIT_PNG;
public extern "%" SDL_Enum IMG_INIT_TIF;
public extern "%" SDL_Enum IMG_INIT_WEBP;
/* enum SDL_GLprofile */
public extern "%" SDL_Enum SDL_GL_CONTEXT_PROFILE_CORE;
public extern "%" SDL_Enum SDL_GL_CONTEXT_PROFILE_COMPATIBILITY;
public extern "%" SDL_Enum SDL_GL_CONTEXT_PROFILE_ES;
public multithreaded struct extern "int" "extenum" tdefl_status { }
public extern "%" tdefl_status TDEFL_STATUS_BAD_PARAM;
public extern "%" tdefl_status TDEFL_STATUS_PUT_BUF_FAILED;
public extern "%" tdefl_status TDEFL_STATUS_OKAY;
public extern "%" tdefl_status TDEFL_STATUS_DONE;
public multithreaded struct extern "int" "extenum" SDL_PowerState { }
public extern "%" SDL_PowerState SDL_POWERSTATE_UNKNOWN;
public extern "%" SDL_PowerState SDL_POWERSTATE_ON_BATTERY;
public extern "%" SDL_PowerState SDL_POWERSTATE_NO_BATTERY;
public extern "%" SDL_PowerState SDL_POWERSTATE_CHARGING;
public extern "%" SDL_PowerState SDL_POWERSTATE_CHARGED;
public multithreaded struct extern "int" "extenum" SDL_AudioStatus { }
public extern "%" SDL_AudioStatus SDL_AUDIO_STOPPED;
public extern "%" SDL_AudioStatus SDL_AUDIO_PLAYING;
public extern "%" SDL_AudioStatus SDL_AUDIO_PAUSED;
/* enum SDL_TextureModulate */
public extern "%" SDL_Enum SDL_TEXTUREMODULATE_NONE;
public extern "%" SDL_Enum SDL_TEXTUREMODULATE_COLOR;
public extern "%" SDL_Enum SDL_TEXTUREMODULATE_ALPHA;
/* enum SDL_MessageBoxFlags */
public extern "%" SDL_Enum SDL_MESSAGEBOX_ERROR;
public extern "%" SDL_Enum SDL_MESSAGEBOX_WARNING;
public extern "%" SDL_Enum SDL_MESSAGEBOX_INFORMATION;
public multithreaded struct extern "int" "extenum" SDL_GameControllerBindType { }
public extern "%" SDL_GameControllerBindType SDL_CONTROLLER_BINDTYPE_NONE;
public extern "%" SDL_GameControllerBindType SDL_CONTROLLER_BINDTYPE_BUTTON;
public extern "%" SDL_GameControllerBindType SDL_CONTROLLER_BINDTYPE_AXIS;
public extern "%" SDL_GameControllerBindType SDL_CONTROLLER_BINDTYPE_HAT;
public multithreaded struct extern "int" "extenum" tinfl_status { }
public extern "%" tinfl_status TINFL_STATUS_BAD_PARAM;
public extern "%" tinfl_status TINFL_STATUS_ADLER32_MISMATCH;
public extern "%" tinfl_status TINFL_STATUS_FAILED;
public extern "%" tinfl_status TINFL_STATUS_DONE;
public extern "%" tinfl_status TINFL_STATUS_NEEDS_MORE_INPUT;
public extern "%" tinfl_status TINFL_STATUS_HAS_MORE_OUTPUT;
/* unnamed enum */
public extern "%" SDL_Enum SDLK_UNKNOWN;
public extern "%" SDL_Enum SDLK_RETURN;
public extern "%" SDL_Enum SDLK_ESCAPE;
public extern "%" SDL_Enum SDLK_BACKSPACE;
public extern "%" SDL_Enum SDLK_TAB;
public extern "%" SDL_Enum SDLK_SPACE;
public extern "%" SDL_Enum SDLK_EXCLAIM;
public extern "%" SDL_Enum SDLK_QUOTEDBL;
public extern "%" SDL_Enum SDLK_HASH;
public extern "%" SDL_Enum SDLK_PERCENT;
public extern "%" SDL_Enum SDLK_DOLLAR;
public extern "%" SDL_Enum SDLK_AMPERSAND;
public extern "%" SDL_Enum SDLK_QUOTE;
public extern "%" SDL_Enum SDLK_LEFTPAREN;
public extern "%" SDL_Enum SDLK_RIGHTPAREN;
public extern "%" SDL_Enum SDLK_ASTERISK;
public extern "%" SDL_Enum SDLK_PLUS;
public extern "%" SDL_Enum SDLK_COMMA;
public extern "%" SDL_Enum SDLK_MINUS;
public extern "%" SDL_Enum SDLK_PERIOD;
public extern "%" SDL_Enum SDLK_SLASH;
public extern "%" SDL_Enum SDLK_0;
public extern "%" SDL_Enum SDLK_1;
public extern "%" SDL_Enum SDLK_2;
public extern "%" SDL_Enum SDLK_3;
public extern "%" SDL_Enum SDLK_4;
public extern "%" SDL_Enum SDLK_5;
public extern "%" SDL_Enum SDLK_6;
public extern "%" SDL_Enum SDLK_7;
public extern "%" SDL_Enum SDLK_8;
public extern "%" SDL_Enum SDLK_9;
public extern "%" SDL_Enum SDLK_COLON;
public extern "%" SDL_Enum SDLK_SEMICOLON;
public extern "%" SDL_Enum SDLK_LESS;
public extern "%" SDL_Enum SDLK_EQUALS;
public extern "%" SDL_Enum SDLK_GREATER;
public extern "%" SDL_Enum SDLK_QUESTION;
public extern "%" SDL_Enum SDLK_AT;
public extern "%" SDL_Enum SDLK_LEFTBRACKET;
public extern "%" SDL_Enum SDLK_BACKSLASH;
public extern "%" SDL_Enum SDLK_RIGHTBRACKET;
public extern "%" SDL_Enum SDLK_CARET;
public extern "%" SDL_Enum SDLK_UNDERSCORE;
public extern "%" SDL_Enum SDLK_BACKQUOTE;
public extern "%" SDL_Enum SDLK_a;
public extern "%" SDL_Enum SDLK_b;
public extern "%" SDL_Enum SDLK_c;
public extern "%" SDL_Enum SDLK_d;
public extern "%" SDL_Enum SDLK_e;
public extern "%" SDL_Enum SDLK_f;
public extern "%" SDL_Enum SDLK_g;
public extern "%" SDL_Enum SDLK_h;
public extern "%" SDL_Enum SDLK_i;
public extern "%" SDL_Enum SDLK_j;
public extern "%" SDL_Enum SDLK_k;
public extern "%" SDL_Enum SDLK_l;
public extern "%" SDL_Enum SDLK_m;
public extern "%" SDL_Enum SDLK_n;
public extern "%" SDL_Enum SDLK_o;
public extern "%" SDL_Enum SDLK_p;
public extern "%" SDL_Enum SDLK_q;
public extern "%" SDL_Enum SDLK_r;
public extern "%" SDL_Enum SDLK_s;
public extern "%" SDL_Enum SDLK_t;
public extern "%" SDL_Enum SDLK_u;
public extern "%" SDL_Enum SDLK_v;
public extern "%" SDL_Enum SDLK_w;
public extern "%" SDL_Enum SDLK_x;
public extern "%" SDL_Enum SDLK_y;
public extern "%" SDL_Enum SDLK_z;
public extern "%" SDL_Enum SDLK_CAPSLOCK;
public extern "%" SDL_Enum SDLK_F1;
public extern "%" SDL_Enum SDLK_F2;
public extern "%" SDL_Enum SDLK_F3;
public extern "%" SDL_Enum SDLK_F4;
public extern "%" SDL_Enum SDLK_F5;
public extern "%" SDL_Enum SDLK_F6;
public extern "%" SDL_Enum SDLK_F7;
public extern "%" SDL_Enum SDLK_F8;
public extern "%" SDL_Enum SDLK_F9;
public extern "%" SDL_Enum SDLK_F10;
public extern "%" SDL_Enum SDLK_F11;
public extern "%" SDL_Enum SDLK_F12;
public extern "%" SDL_Enum SDLK_PRINTSCREEN;
public extern "%" SDL_Enum SDLK_SCROLLLOCK;
public extern "%" SDL_Enum SDLK_PAUSE;
public extern "%" SDL_Enum SDLK_INSERT;
public extern "%" SDL_Enum SDLK_HOME;
public extern "%" SDL_Enum SDLK_PAGEUP;
public extern "%" SDL_Enum SDLK_DELETE;
public extern "%" SDL_Enum SDLK_END;
public extern "%" SDL_Enum SDLK_PAGEDOWN;
public extern "%" SDL_Enum SDLK_RIGHT;
public extern "%" SDL_Enum SDLK_LEFT;
public extern "%" SDL_Enum SDLK_DOWN;
public extern "%" SDL_Enum SDLK_UP;
public extern "%" SDL_Enum SDLK_NUMLOCKCLEAR;
public extern "%" SDL_Enum SDLK_KP_DIVIDE;
public extern "%" SDL_Enum SDLK_KP_MULTIPLY;
public extern "%" SDL_Enum SDLK_KP_MINUS;
public extern "%" SDL_Enum SDLK_KP_PLUS;
public extern "%" SDL_Enum SDLK_KP_ENTER;
public extern "%" SDL_Enum SDLK_KP_1;
public extern "%" SDL_Enum SDLK_KP_2;
public extern "%" SDL_Enum SDLK_KP_3;
public extern "%" SDL_Enum SDLK_KP_4;
public extern "%" SDL_Enum SDLK_KP_5;
public extern "%" SDL_Enum SDLK_KP_6;
public extern "%" SDL_Enum SDLK_KP_7;
public extern "%" SDL_Enum SDLK_KP_8;
public extern "%" SDL_Enum SDLK_KP_9;
public extern "%" SDL_Enum SDLK_KP_0;
public extern "%" SDL_Enum SDLK_KP_PERIOD;
public extern "%" SDL_Enum SDLK_APPLICATION;
public extern "%" SDL_Enum SDLK_POWER;
public extern "%" SDL_Enum SDLK_KP_EQUALS;
public extern "%" SDL_Enum SDLK_F13;
public extern "%" SDL_Enum SDLK_F14;
public extern "%" SDL_Enum SDLK_F15;
public extern "%" SDL_Enum SDLK_F16;
public extern "%" SDL_Enum SDLK_F17;
public extern "%" SDL_Enum SDLK_F18;
public extern "%" SDL_Enum SDLK_F19;
public extern "%" SDL_Enum SDLK_F20;
public extern "%" SDL_Enum SDLK_F21;
public extern "%" SDL_Enum SDLK_F22;
public extern "%" SDL_Enum SDLK_F23;
public extern "%" SDL_Enum SDLK_F24;
public extern "%" SDL_Enum SDLK_EXECUTE;
public extern "%" SDL_Enum SDLK_HELP;
public extern "%" SDL_Enum SDLK_MENU;
public extern "%" SDL_Enum SDLK_SELECT;
public extern "%" SDL_Enum SDLK_STOP;
public extern "%" SDL_Enum SDLK_AGAIN;
public extern "%" SDL_Enum SDLK_UNDO;
public extern "%" SDL_Enum SDLK_CUT;
public extern "%" SDL_Enum SDLK_COPY;
public extern "%" SDL_Enum SDLK_PASTE;
public extern "%" SDL_Enum SDLK_FIND;
public extern "%" SDL_Enum SDLK_MUTE;
public extern "%" SDL_Enum SDLK_VOLUMEUP;
public extern "%" SDL_Enum SDLK_VOLUMEDOWN;
public extern "%" SDL_Enum SDLK_KP_COMMA;
public extern "%" SDL_Enum SDLK_KP_EQUALSAS400;
public extern "%" SDL_Enum SDLK_ALTERASE;
public extern "%" SDL_Enum SDLK_SYSREQ;
public extern "%" SDL_Enum SDLK_CANCEL;
public extern "%" SDL_Enum SDLK_CLEAR;
public extern "%" SDL_Enum SDLK_PRIOR;
public extern "%" SDL_Enum SDLK_RETURN2;
public extern "%" SDL_Enum SDLK_SEPARATOR;
public extern "%" SDL_Enum SDLK_OUT;
public extern "%" SDL_Enum SDLK_OPER;
public extern "%" SDL_Enum SDLK_CLEARAGAIN;
public extern "%" SDL_Enum SDLK_CRSEL;
public extern "%" SDL_Enum SDLK_EXSEL;
public extern "%" SDL_Enum SDLK_KP_00;
public extern "%" SDL_Enum SDLK_KP_000;
public extern "%" SDL_Enum SDLK_THOUSANDSSEPARATOR;
public extern "%" SDL_Enum SDLK_DECIMALSEPARATOR;
public extern "%" SDL_Enum SDLK_CURRENCYUNIT;
public extern "%" SDL_Enum SDLK_CURRENCYSUBUNIT;
public extern "%" SDL_Enum SDLK_KP_LEFTPAREN;
public extern "%" SDL_Enum SDLK_KP_RIGHTPAREN;
public extern "%" SDL_Enum SDLK_KP_LEFTBRACE;
public extern "%" SDL_Enum SDLK_KP_RIGHTBRACE;
public extern "%" SDL_Enum SDLK_KP_TAB;
public extern "%" SDL_Enum SDLK_KP_BACKSPACE;
public extern "%" SDL_Enum SDLK_KP_A;
public extern "%" SDL_Enum SDLK_KP_B;
public extern "%" SDL_Enum SDLK_KP_C;
public extern "%" SDL_Enum SDLK_KP_D;
public extern "%" SDL_Enum SDLK_KP_E;
public extern "%" SDL_Enum SDLK_KP_F;
public extern "%" SDL_Enum SDLK_KP_XOR;
public extern "%" SDL_Enum SDLK_KP_POWER;
public extern "%" SDL_Enum SDLK_KP_PERCENT;
public extern "%" SDL_Enum SDLK_KP_LESS;
public extern "%" SDL_Enum SDLK_KP_GREATER;
public extern "%" SDL_Enum SDLK_KP_AMPERSAND;
public extern "%" SDL_Enum SDLK_KP_DBLAMPERSAND;
public extern "%" SDL_Enum SDLK_KP_VERTICALBAR;
public extern "%" SDL_Enum SDLK_KP_DBLVERTICALBAR;
public extern "%" SDL_Enum SDLK_KP_COLON;
public extern "%" SDL_Enum SDLK_KP_HASH;
public extern "%" SDL_Enum SDLK_KP_SPACE;
public extern "%" SDL_Enum SDLK_KP_AT;
public extern "%" SDL_Enum SDLK_KP_EXCLAM;
public extern "%" SDL_Enum SDLK_KP_MEMSTORE;
public extern "%" SDL_Enum SDLK_KP_MEMRECALL;
public extern "%" SDL_Enum SDLK_KP_MEMCLEAR;
public extern "%" SDL_Enum SDLK_KP_MEMADD;
public extern "%" SDL_Enum SDLK_KP_MEMSUBTRACT;
public extern "%" SDL_Enum SDLK_KP_MEMMULTIPLY;
public extern "%" SDL_Enum SDLK_KP_MEMDIVIDE;
public extern "%" SDL_Enum SDLK_KP_PLUSMINUS;
public extern "%" SDL_Enum SDLK_KP_CLEAR;
public extern "%" SDL_Enum SDLK_KP_CLEARENTRY;
public extern "%" SDL_Enum SDLK_KP_BINARY;
public extern "%" SDL_Enum SDLK_KP_OCTAL;
public extern "%" SDL_Enum SDLK_KP_DECIMAL;
public extern "%" SDL_Enum SDLK_KP_HEXADECIMAL;
public extern "%" SDL_Enum SDLK_LCTRL;
public extern "%" SDL_Enum SDLK_LSHIFT;
public extern "%" SDL_Enum SDLK_LALT;
public extern "%" SDL_Enum SDLK_LGUI;
public extern "%" SDL_Enum SDLK_RCTRL;
public extern "%" SDL_Enum SDLK_RSHIFT;
public extern "%" SDL_Enum SDLK_RALT;
public extern "%" SDL_Enum SDLK_RGUI;
public extern "%" SDL_Enum SDLK_MODE;
public extern "%" SDL_Enum SDLK_AUDIONEXT;
public extern "%" SDL_Enum SDLK_AUDIOPREV;
public extern "%" SDL_Enum SDLK_AUDIOSTOP;
public extern "%" SDL_Enum SDLK_AUDIOPLAY;
public extern "%" SDL_Enum SDLK_AUDIOMUTE;
public extern "%" SDL_Enum SDLK_MEDIASELECT;
public extern "%" SDL_Enum SDLK_WWW;
public extern "%" SDL_Enum SDLK_MAIL;
public extern "%" SDL_Enum SDLK_CALCULATOR;
public extern "%" SDL_Enum SDLK_COMPUTER;
public extern "%" SDL_Enum SDLK_AC_SEARCH;
public extern "%" SDL_Enum SDLK_AC_HOME;
public extern "%" SDL_Enum SDLK_AC_BACK;
public extern "%" SDL_Enum SDLK_AC_FORWARD;
public extern "%" SDL_Enum SDLK_AC_STOP;
public extern "%" SDL_Enum SDLK_AC_REFRESH;
public extern "%" SDL_Enum SDLK_AC_BOOKMARKS;
public extern "%" SDL_Enum SDLK_BRIGHTNESSDOWN;
public extern "%" SDL_Enum SDLK_BRIGHTNESSUP;
public extern "%" SDL_Enum SDLK_DISPLAYSWITCH;
public extern "%" SDL_Enum SDLK_KBDILLUMTOGGLE;
public extern "%" SDL_Enum SDLK_KBDILLUMDOWN;
public extern "%" SDL_Enum SDLK_KBDILLUMUP;
public extern "%" SDL_Enum SDLK_EJECT;
public extern "%" SDL_Enum SDLK_SLEEP;
/* unnamed enum */
public extern "%" SDL_Enum SDL_LOG_CATEGORY_APPLICATION;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_ERROR;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_ASSERT;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_SYSTEM;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_AUDIO;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_VIDEO;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RENDER;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_INPUT;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_TEST;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED1;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED2;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED3;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED4;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED5;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED6;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED7;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED8;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED9;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_RESERVED10;
public extern "%" SDL_Enum SDL_LOG_CATEGORY_CUSTOM;
/* unnamed enum */
public extern "%" SDL_Enum SDL_PIXELTYPE_UNKNOWN;
public extern "%" SDL_Enum SDL_PIXELTYPE_INDEX1;
public extern "%" SDL_Enum SDL_PIXELTYPE_INDEX4;
public extern "%" SDL_Enum SDL_PIXELTYPE_INDEX8;
public extern "%" SDL_Enum SDL_PIXELTYPE_PACKED8;
public extern "%" SDL_Enum SDL_PIXELTYPE_PACKED16;
public extern "%" SDL_Enum SDL_PIXELTYPE_PACKED32;
public extern "%" SDL_Enum SDL_PIXELTYPE_ARRAYU8;
public extern "%" SDL_Enum SDL_PIXELTYPE_ARRAYU16;
public extern "%" SDL_Enum SDL_PIXELTYPE_ARRAYU32;
public extern "%" SDL_Enum SDL_PIXELTYPE_ARRAYF16;
public extern "%" SDL_Enum SDL_PIXELTYPE_ARRAYF32;
/* unnamed enum */
public extern "%" SDL_Enum SDL_BITMAPORDER_NONE;
public extern "%" SDL_Enum SDL_BITMAPORDER_4321;
public extern "%" SDL_Enum SDL_BITMAPORDER_1234;
/* unnamed enum */
public extern "%" SDL_Enum SDL_PACKEDORDER_NONE;
public extern "%" SDL_Enum SDL_PACKEDORDER_XRGB;
public extern "%" SDL_Enum SDL_PACKEDORDER_RGBX;
public extern "%" SDL_Enum SDL_PACKEDORDER_ARGB;
public extern "%" SDL_Enum SDL_PACKEDORDER_RGBA;
public extern "%" SDL_Enum SDL_PACKEDORDER_XBGR;
public extern "%" SDL_Enum SDL_PACKEDORDER_BGRX;
public extern "%" SDL_Enum SDL_PACKEDORDER_ABGR;
public extern "%" SDL_Enum SDL_PACKEDORDER_BGRA;
/* unnamed enum */
public extern "%" SDL_Enum SDL_ARRAYORDER_NONE;
public extern "%" SDL_Enum SDL_ARRAYORDER_RGB;
public extern "%" SDL_Enum SDL_ARRAYORDER_RGBA;
public extern "%" SDL_Enum SDL_ARRAYORDER_ARGB;
public extern "%" SDL_Enum SDL_ARRAYORDER_BGR;
public extern "%" SDL_Enum SDL_ARRAYORDER_BGRA;
public extern "%" SDL_Enum SDL_ARRAYORDER_ABGR;
/* unnamed enum */
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_NONE;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_332;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_4444;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_1555;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_5551;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_565;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_8888;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_2101010;
public extern "%" SDL_Enum SDL_PACKEDLAYOUT_1010102;
/* unnamed enum */
public extern "%" SDL_Enum SDL_PIXELFORMAT_UNKNOWN;
public extern "%" SDL_Enum SDL_PIXELFORMAT_INDEX1LSB;
public extern "%" SDL_Enum SDL_PIXELFORMAT_INDEX1MSB;
public extern "%" SDL_Enum SDL_PIXELFORMAT_INDEX4LSB;
public extern "%" SDL_Enum SDL_PIXELFORMAT_INDEX4MSB;
public extern "%" SDL_Enum SDL_PIXELFORMAT_INDEX8;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB332;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB444;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB555;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGR555;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ARGB4444;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGBA4444;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ABGR4444;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGRA4444;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ARGB1555;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGBA5551;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ABGR1555;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGRA5551;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB565;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGR565;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB24;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGR24;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGB888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGBX8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGR888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGRX8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ARGB8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_RGBA8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ABGR8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_BGRA8888;
public extern "%" SDL_Enum SDL_PIXELFORMAT_ARGB2101010;
public extern "%" SDL_Enum SDL_PIXELFORMAT_YV12;
public extern "%" SDL_Enum SDL_PIXELFORMAT_IYUV;
public extern "%" SDL_Enum SDL_PIXELFORMAT_YUY2;
public extern "%" SDL_Enum SDL_PIXELFORMAT_UYVY;
public extern "%" SDL_Enum SDL_PIXELFORMAT_YVYU;
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
public extern "%" SDL_Enum MZ_ZIP_MAX_IO_BUF_SIZE;
public extern "%" SDL_Enum MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE;
public extern "%" SDL_Enum MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE;
/* unnamed enum */
public extern "%" SDL_Enum TINFL_FLAG_PARSE_ZLIB_HEADER;
public extern "%" SDL_Enum TINFL_FLAG_HAS_MORE_INPUT;
public extern "%" SDL_Enum TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF;
public extern "%" SDL_Enum TINFL_FLAG_COMPUTE_ADLER32;
/* unnamed enum */
public extern "%" SDL_Enum TINFL_MAX_HUFF_TABLES;
public extern "%" SDL_Enum TINFL_FAST_LOOKUP_BITS;
/* unnamed enum */
public extern "%" SDL_Enum TDEFL_HUFFMAN_ONLY;
/* unnamed enum */
public extern "%" SDL_Enum TDEFL_WRITE_ZLIB_HEADER;
public extern "%" SDL_Enum TDEFL_COMPUTE_ADLER32;
public extern "%" SDL_Enum TDEFL_GREEDY_PARSING_FLAG;
public extern "%" SDL_Enum TDEFL_NONDETERMINISTIC_PARSING_FLAG;
public extern "%" SDL_Enum TDEFL_RLE_MATCHES;
public extern "%" SDL_Enum TDEFL_FILTER_MATCHES;
public extern "%" SDL_Enum TDEFL_FORCE_ALL_STATIC_BLOCKS;
public extern "%" SDL_Enum TDEFL_FORCE_ALL_RAW_BLOCKS;
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
/* unnamed enum */
public extern "%" SDL_Enum MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG;
public extern "%" SDL_Enum MZ_ZIP_LOCAL_DIR_HEADER_SIZE;
public extern "%" SDL_Enum MZ_ZIP_CDH_SIG_OFS;
public extern "%" SDL_Enum MZ_ZIP_CDH_METHOD_OFS;
public extern "%" SDL_Enum MZ_ZIP_CDH_COMPRESSED_SIZE_OFS;
public extern "%" SDL_Enum MZ_ZIP_CDH_COMMENT_LEN_OFS;
public extern "%" SDL_Enum MZ_ZIP_LDH_SIG_OFS;
public extern "%" SDL_Enum MZ_ZIP_LDH_FILE_DATE_OFS;
public extern "%" SDL_Enum MZ_ZIP_LDH_FILENAME_LEN_OFS;
public extern "%" SDL_Enum MZ_ZIP_ECDH_SIG_OFS;
public extern "%" SDL_Enum MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS;
public extern "%" SDL_Enum SDL_INIT_AUDIO; /* macro */
public extern "%" SDL_Enum SDL_INIT_EVENTS; /* macro */
public extern "%" SDL_Enum SDL_INIT_EVERYTHING; /* macro */
public extern "%" SDL_Enum SDL_INIT_GAMECONTROLLER; /* macro */
public extern "%" SDL_Enum SDL_INIT_HAPTIC; /* macro */
public extern "%" SDL_Enum SDL_INIT_JOYSTICK; /* macro */
public extern "%" SDL_Enum SDL_INIT_NOPARACHUTE; /* macro */
public extern "%" SDL_Enum SDL_INIT_TIMER; /* macro */
public extern "%" SDL_Enum SDL_INIT_VIDEO; /* macro */
public extern "%" SDL_Enum SDL_WINDOWPOS_CENTERED; /* macro */
public extern "%" SDL_Enum SDL_WINDOWPOS_CENTERED_MASK; /* macro */
public extern "%" SDL_Enum SDL_WINDOWPOS_UNDEFINED; /* macro */
public extern "%" SDL_Enum SDL_WINDOWPOS_UNDEFINED_MASK; /* macro */
