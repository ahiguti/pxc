namespace io::signal;
public import numeric::integral -;
public import io -;
public import io::errno -;
public import io::file -;

public tsvaluetype struct extern "int" "extenum" signo_t { }
public extern "SIGPIPE" signo_t SIGPIPE;

public tsvaluetype struct extern "sighandler_t" "extenum" sighandler_t { }
public extern "SIG_DFL" sighandler_t SIG_DFL;
public extern "SIG_IGN" sighandler_t SIG_IGN;
public extern "pxcio::no_op_handler" sighandler_t SIG_NO_OP;

public function extern "pxcio::set_signal_handler"
bool signal(io const& iop, signo_t sig, sighandler_t handler);

extern "types" inline
#include <signal.h>
;

extern "implementation" inline
namespace pxcio {
bool set_signal_handler(io const& iop, int sig, sighandler_t h)
{
  errno = 0;
  const sighandler_t r = ::signal(sig, h);
  return (r != SIG_ERR);
}
};
;

