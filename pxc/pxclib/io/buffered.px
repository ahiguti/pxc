namespace io::buffered;
public import type::builtin "";
public import io::errno "";

threaded function {t, func} void stream_foreach(t& stream, string& buffer,
  uchar delim, size_t read_max, errno_eh& eh)
{
  while (true) {
    size_t pos = buffer.size();
    size_t const rlen = stream.read(buffer, read_max, eh);
    if (rlen == 0) {
      break;
    }
    while (true) {
      size_t const p = buffer.find(pos, delim);
      if (p == buffer.size()) {
	break;
      }
      func(buffer[pos .. p]);
      pos = p + 1;
    }
    buffer.erase(0, pos);
  }
}

