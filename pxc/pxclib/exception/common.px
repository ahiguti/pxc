namespace exception::common;
public import exception::impl::common;
public import numeric::integral -;
public import container::string -;

public mtvaluetype interface extern "std::exception"
  exception { }
public mtvaluetype interface extern "std::logic_error"
  logic_error <exception> { }
public mtvaluetype interface extern "std::runtime_error"
  runtime_error <exception> { }
public mtvaluetype interface extern "std::bad_alloc"
  bad_alloc <exception> { }

public mtvaluetype struct extern "pxcrt::invalid_index" ""
  invalid_index <logic_error> { }
public mtvaluetype struct extern "pxcrt::invalid_field" ""
  invalid_field <logic_error> { }
public mtvaluetype struct extern "pxcrt::would_invalidate" ""
  would_invalidate <logic_error> { }

public threaded function extern "pxcrt::get_stack_trace" string
get_stack_trace(exception const& ex);

public function extern "pxcrt::set_stack_trace_limit" void
set_stack_trace_limit(size_t sz);

