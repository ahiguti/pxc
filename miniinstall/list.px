namespace list;
import type::builtin "";
import io::standard "";

union {t} list {
  unit null;
  ptr{cons{t}} consptr;
}

struct {t} cons {
  t head;
  list{t} rest;
}

function {t} list{t} make_cons(t const& x, list{t} const& xs)
{
  list{t} r;
  r.consptr = ptr(cons{t}(x, xs));
  return r;
}

list{int} z = make_cons(int(3), make_cons(int(5), list{int}()));

function {t} void dump_list(list{t} const& lst)
{
  if (case lst.consptr) {
    ptr{cons{t}} p = lst.consptr;
    println(p->head);
    dump_list(p->rest);
  }
}

dump_list(z);
